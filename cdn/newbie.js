(()=>{"use strict";var t,e,o,n={545:(t,e,o)=>{o.r(e)},558:(t,e)=>{var o;Object.defineProperty(e,"__esModule",{value:!0}),e.ClassNames=void 0,(o=e.ClassNames||(e.ClassNames={})).HINT_WRAP="newbie-hint-wrap",o.HINT_WRAP_INNER="newbie-hint-wrap__inner",o.HINT_WRAP_VISIBLE="newbie-hint-wrap_visible",o.HINT="newbie-hint",o.SHADOW="newbie-shadow",o.SHADOW_SVG="newbie-shadow__svg",o.SHADOW_VISIBLE="newbie-shadow_visible",o.SHADOW_OVERLAY="newbie-shadow__overlay",o.SHADOW_OVERLAY_TOP="newbie-shadow__overlay_top",o.SHADOW_OVERLAY_RIGHT="newbie-shadow__overlay_right",o.SHADOW_OVERLAY_BOTTOM="newbie-shadow__overlay_bottom",o.SHADOW_OVERLAY_LEFT="newbie-shadow__overlay_left",o.ARROW="newbie-arrow",o.ARROW_VISIBLE="newbie-arrow_visible"},567:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DEFAULT_VALUES=void 0;var n=o(106);e.DEFAULT_VALUES={position:n.Position.Bottom,offsetX:10,offsetY:10,transitionDuration:200,shadow:{enabled:!0,color:"rgba(0, 0, 0, .3)",offset:10,borderRadius:5,rootComponent:document.documentElement,disableScroll:!0},arrow:{enabled:!0,size:5,color:"#ffffff",offsetX:0,offsetY:0}}},339:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Error=void 0,function(t){t.NO_CONFIG_PROVIDED="No config provided!",t.ID_ERROR="Specify unique id for each step!",t.NO_STEPS_PROVIDED="No steps provided!",t.NO_HINT_PROVIDED="No hint provided!",t.NO_HINT_COMPONENT_PROVIDED="No hint component provided!"}(e.Error||(e.Error={}))},106:(t,e)=>{var o;Object.defineProperty(e,"__esModule",{value:!0}),e.Position=void 0,(o=e.Position||(e.Position={})).Top="top",o.TopLeft="top-left",o.TopRight="top-right",o.Right="right",o.RightTop="right-top",o.RightBottom="right-bottom",o.Bottom="bottom",o.BottomLeft="bottom-left",o.BottomRight="bottom-right",o.Left="left",o.LeftTop="left-top",o.LeftBottom="left-bottom",o.Center="center"},627:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ArrowFactory=void 0;var n=o(125),i=o(702),r=function(){function t(){}return t.create=function(t){return t.enabled?(this._triangleArrow||(this._triangleArrow=new i.TriangleArrow),this._triangleArrow):(this._nullArrow||(this._nullArrow=new n.NullArrow),this._nullArrow)},t}();e.ArrowFactory=r},125:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NullArrow=void 0;var o=function(){function t(){}return Object.defineProperty(t.prototype,"elem",{get:function(){return null},enumerable:!1,configurable:!0}),t.prototype.mount=function(){},t.prototype.unmount=function(){},t}();e.NullArrow=o},702:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TriangleArrow=void 0;var n=o(558),i=o(106),r=o(90),s=o(221),a=function(){function t(){this._createElement()}return Object.defineProperty(t.prototype,"elem",{get:function(){return this._component},enumerable:!1,configurable:!0}),t.prototype.mount=function(t,e){this._updateSize(t.size),this._updateColor(t.color),this._updatePosition(t,e),this._show()},t.prototype.unmount=function(){this._hide()},t.prototype._show=function(){this._component.classList.add(n.ClassNames.ARROW_VISIBLE)},t.prototype._hide=function(){this._component.classList.remove(n.ClassNames.ARROW_VISIBLE)},t.prototype._createElement=function(){var t=document.createElement("div");t.classList.add(n.ClassNames.ARROW),this._component=t},t.prototype._updateSize=function(t){this._component.style.width=(0,s.default)(2*t),this._component.style.height=(0,s.default)(2*t)},t.prototype._updateColor=function(t){this._component.style.backgroundColor=t},t.prototype._updatePosition=function(t,e){var o=e.hintRect,n=e.position,a=t.size,l=a*Math.sqrt(2)/2,u=Math.max(l,t.offsetX),c=Math.max(l,t.offsetY);switch(n){case i.Position.Top:(0,r.default)(this._component,{bottom:(0,s.default)(-a),left:(0,s.default)(Math.max(o.width/2-l,u))});break;case i.Position.TopLeft:(0,r.default)(this._component,{bottom:(0,s.default)(-a),left:(0,s.default)(u)});break;case i.Position.TopRight:(0,r.default)(this._component,{bottom:(0,s.default)(-a),right:(0,s.default)(u)});break;case i.Position.Right:(0,r.default)(this._component,{left:(0,s.default)(-a),top:(0,s.default)(Math.max(o.height/2-l,c))});break;case i.Position.RightTop:(0,r.default)(this._component,{left:(0,s.default)(-a),top:(0,s.default)(c)});break;case i.Position.RightBottom:(0,r.default)(this._component,{left:(0,s.default)(-a),bottom:(0,s.default)(c)});break;case i.Position.Bottom:(0,r.default)(this._component,{top:(0,s.default)(-a),left:(0,s.default)(Math.max(o.width/2-l,u))}),this._component.style.top=(0,s.default)(-a);break;case i.Position.BottomLeft:(0,r.default)(this._component,{top:(0,s.default)(-a),left:(0,s.default)(u)});break;case i.Position.BottomRight:(0,r.default)(this._component,{top:(0,s.default)(-a),right:(0,s.default)(u)});break;case i.Position.Left:(0,r.default)(this._component,{right:(0,s.default)(-a),top:(0,s.default)(Math.max(o.height/2-l,c))});break;case i.Position.LeftTop:(0,r.default)(this._component,{right:(0,s.default)(-a),top:(0,s.default)(c)});break;case i.Position.LeftBottom:(0,r.default)(this._component,{right:(0,s.default)(-a),bottom:(0,s.default)(c)})}},t}();e.TriangleArrow=a},691:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ComponentsFactory=void 0;var n=o(714),i=o(627),r=o(530),s=function(){function t(){}return t.prototype.createShadow=function(t,e){return n.ShadowFactory.create(t,e)},t.prototype.createArrow=function(t){return i.ArrowFactory.create(t)},t.prototype.createStepContainer=function(t){return r.StepContainerFactory.create(t)},t}();e.ComponentsFactory=s},706:function(t,e,o){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.VanillaComponentsFactory=void 0;var r=o(94),s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return i(e,t),e.prototype.createHint=function(t,e){return this._hintFactory||(this._hintFactory=new r.VanillaHintFactory),this._hintFactory.create(t,e)},e}(o(691).ComponentsFactory);e.VanillaComponentsFactory=s},588:function(t,e,o){var n=this&&this.__assign||function(){return n=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var i in e=arguments[o])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},n.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.Config=void 0;var i=o(567),r=o(106),s=o(339),a=o(87),l=function(){function t(t){this._config=t}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!1,configurable:!0}),t.prototype.validate=function(){return this._config?!Array.isArray(this._config.steps)||Array.isArray(this._config.steps)&&!this._config.steps.length?s.Error.NO_STEPS_PROVIDED:!this._config.hint&&this._config.steps.some((function(t){return!t.hint}))?s.Error.NO_HINT_PROVIDED:this._config.hint&&!this._config.hint.component&&this._config.steps.some((function(t){return!t.hint}))||!this._config.hint&&this._config.steps.some((function(t){return t.hint&&!t.hint.component}))?s.Error.NO_HINT_COMPONENT_PROVIDED:null:s.Error.NO_CONFIG_PROVIDED},t.prototype.resolveStepConfig=function(t){var e="string"==typeof t?this._config.steps.find((function(e){return e.id===t})):this._config.steps[t],o=this._config;return(0,a.default)(e.id)||(e.id="No. ".concat(t)),e.transitionDuration=this._resolve(o,e,"transitionDuration"),e.target?(e.position=this._resolve(o,e,"position"),e.offsetX=this._resolve(o,e,"offsetX"),e.offsetY=this._resolve(o,e,"offsetY"),e.arrow=this._resolveObject(o,e,"arrow")):(e.position=r.Position.Center,e.offsetX=0,e.offsetY=0,e.arrow={enabled:!1}),e.shadow=this._resolveObject(o,e,"shadow"),e.hint=this._resolveObject(o,e,"hint"),(0,a.default)(e.content)||(e.content={}),e},t.prototype._resolve=function(t,e,o){return(0,a.default)(e[o])?e[o]:(0,a.default)(t[o])?t[o]:i.DEFAULT_VALUES[o]},t.prototype._resolveObject=function(t,e,o){var r=n(n({},t[o]),e[o]),s=i.DEFAULT_VALUES[o]||{};return Object.keys(s).forEach((function(t){(0,a.default)(r[t])||(r[t]=s[t])})),r},t}();e.Config=l},939:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Globals=void 0;var o=function(){function t(){}return Object.defineProperty(t,"componentsFactory",{get:function(){return this._componentsFactory},set:function(t){this._componentsFactory||(this._componentsFactory=t)},enumerable:!1,configurable:!0}),t._componentsFactory=null,t}();e.Globals=o},866:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Hint=void 0;var o=function(){function t(t){this._content={}}return Object.defineProperty(t.prototype,"elem",{get:function(){return this._component},enumerable:!1,configurable:!0}),t.prototype.mount=function(){},t.prototype.unmount=function(){this._component.remove()},t.prototype.setContent=function(t){this._content=t},t}();e.Hint=o},94:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.VueHintFactory=e.VanillaHintFactory=void 0;var n=o(901),i=o(291),r=function(){function t(){}return t.prototype.create=function(t,e){return new n.VanillaHint(t,e)},t}();e.VanillaHintFactory=r;var s=function(){function t(t){this._vue=t}return t.prototype.create=function(t,e){return new i.VueHint(t,e,this._vue)},t}();e.VueHintFactory=s},901:function(t,e,o){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.VanillaHint=void 0;var r=o(558),s=function(t){function e(e,o){var n=t.call(this,e)||this;return n._component=e.component,n._component.classList.add(r.ClassNames.HINT),n._settings=o,n}return i(e,t),e.prototype.mount=function(){this._setContent(),this._addDefaultEventListeners()},e.prototype.unmount=function(){this._removeDefaultEventListeners(),t.prototype.unmount.call(this)},e.prototype._setContent=function(){var t=this;Object.keys(this._content).forEach((function(e){var o=t._component.querySelector(e);o&&(o.innerHTML=t._content[e])}))},e.prototype._addDefaultEventListeners=function(){var t=this._component.querySelector("[data-newbie-go-next]");t&&t.addEventListener("click",this._settings.goNext);var e=this._component.querySelector("[data-newbie-go-previous]");e&&e.addEventListener("click",this._settings.goPrevious);var o=this._component.querySelector("[data-newbie-stop]");o&&o.addEventListener("click",this._settings.stop)},e.prototype._removeDefaultEventListeners=function(){var t=this._component.querySelector("[data-newbie-go-next]");t&&t.removeEventListener("click",this._settings.goNext);var e=this._component.querySelector("[data-newbie-go-previous]");e&&e.removeEventListener("click",this._settings.goPrevious);var o=this._component.querySelector("[data-newbie-stop]");o&&o.removeEventListener("click",this._settings.stop)},e}(o(866).Hint);e.VanillaHint=s},291:function(t,e,o){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var i in e=arguments[o])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.VueHint=void 0;var s=o(558),a=function(t){function e(e,o,n){var i=t.call(this,e)||this;return i._Vue=n,i._vueComponent=e.component,i._settings=o,i}return i(e,t),e.prototype.mount=function(){this._component=this._getHintHTMLElement()},e.prototype._getHintHTMLElement=function(){var t=new(this._Vue.extend(this._vueComponent))({propsData:r(r({},this._content),this._settings)}).$mount();t.$on("go-next",this._settings.goNext),t.$on("go-previous",this._settings.goPrevious),t.$on("stop",this._settings.stop);var e=t.$el;return e.classList.add(s.ClassNames.HINT),e},e}(o(866).Hint);e.VueHint=a},362:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Newbie=void 0;var n=o(588),i=o(338),r=o(186),s=o(448),a=o(738),l=o(542),u=function(){function t(t){this._currentStep=null,this._config=new n.Config(t);var e=this._config.validate();e&&(0,a.default)(e),this._setSteps(),this._setLifeCycleHooks()}return t.prototype._beforeStart=function(){},t.prototype._started=function(){},t.prototype._beforeFinish=function(){},t.prototype._finished=function(){},t.prototype.start=function(){this._beforeStart(),this._goTo(this._steps.getFirst()),this._started()},t.prototype.goNext=function(){if(this._currentStep){var t=this._currentStep.next;t?this._goTo(t):this.stop()}},t.prototype.goPrevious=function(){if(this._currentStep){var t=this._currentStep.previous;t&&this._goTo(t)}},t.prototype.goTo=function(t){if(this._currentStep){var e=this._steps.getById(t);e?this._goTo(e):(0,l.default)("Step ".concat(t," not found!"))}},t.prototype.stop=function(){this._beforeFinish(),this._currentStep&&(this._currentStep.value.unmount(),this._currentStep=null),this._finished()},t.prototype._goTo=function(t){this._currentStep&&this._currentStep.value.unmount(),this._currentStep=t,this._currentStep.value.mount()},t.prototype._setSteps=function(){var t=this,e=this._config.config,o=new r.LinkedList;e.steps.forEach((function(e,n){var r=e.id?String(e.id):n,s=new i.Step(t._config.resolveStepConfig(r),{goNext:t.goNext.bind(t),goPrevious:t.goPrevious.bind(t),stop:t.stop.bind(t)});o.add(s)})),this._steps=o},t.prototype._setLifeCycleHooks=function(){var t=this._config.config;this._beforeStart=(0,s.default)(t.beforeStart),this._started=(0,s.default)(t.started),this._beforeFinish=(0,s.default)(t.beforeFinish),this._finished=(0,s.default)(t.finished)},t}();e.Newbie=u},297:function(t,e,o){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.NullShadow=void 0;var r=function(t){function e(){return t.call(this)||this}return i(e,t),e}(o(22).Shadow);e.NullShadow=r},22:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Shadow=void 0;var o=function(){function t(){}return t.prototype.mount=function(t,e){this._config=e,this._config.disableScroll&&this._disableScroll()},t.prototype.unmount=function(){this._config.disableScroll&&this._enableScroll()},t.prototype._disableScroll=function(){this._config.rootComponent.style.overflow="hidden"},t.prototype._enableScroll=function(){this._config.rootComponent.style.removeProperty("overflow")},t}();e.Shadow=o},714:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ShadowFactory=void 0;var n=o(664),i=o(297),r=function(){function t(){}return t.create=function(t,e){return t.enabled?(this._svgShadow||(this._svgShadow=new n.SvgShadow(e)),this._svgShadow):new i.NullShadow},t}();e.ShadowFactory=r},664:function(t,e,o){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});Object.defineProperty(e,"__esModule",{value:!0}),e.SvgShadow=void 0;var r=o(22),s=o(558),a=o(405),l=o(144),u=o(221),c=function(t){function e(e){var o=e.transitionDuration,n=t.call(this)||this;return n._svgRootId="shadow_root",n._maskId="shadow_mask",n._blackId="shadow_mask_black",n._shadowId="shadow",n._x=null,n._y=null,n._width=null,n._height=null,n._rx=null,n._ry=null,n._color=null,n._transitionDuration=o||1,n._createElements(),n}return i(e,t),e.prototype.mount=function(e,o){this._targetElement=e,t.prototype.mount.call(this,e,o),this._update(),this._show(),this._resizeCallback=(0,l.default)(this._update).bind(this),window.addEventListener("resize",this._resizeCallback)},e.prototype.unmount=function(){t.prototype.unmount.call(this),this._hide(),window.removeEventListener("resize",this._resizeCallback)},e.prototype._createElements=function(){this._createSvgElements(),this._createOverlayElements()},e.prototype._update=function(){this._updateSvg(),this._updateOverlay()},e.prototype._show=function(){this._showSvg(),this._showOverlay()},e.prototype._hide=function(){this._hideSvg(),this._hideOverlay()},e.prototype._createSvgElements=function(){var t=document.createElement("div");t.classList.add(s.ClassNames.SHADOW);var e=document.createElement("svg");e.classList.add(s.ClassNames.SHADOW_SVG),e.setAttribute("id",this._svgRootId),e.setAttribute("width","100%"),e.setAttribute("height","100%");var o=document.createElement("rect");o.setAttribute("id",this._shadowId),o.setAttribute("width","100%"),o.setAttribute("height","100%"),o.setAttribute("mask","url(#".concat(this._maskId,")"));var n=document.createElement("defs"),i=document.createElement("mask");i.setAttribute("id",this._maskId);var r=document.createElement("rect");r.setAttribute("x","0"),r.setAttribute("y","0"),r.setAttribute("width","100%"),r.setAttribute("height","100%"),r.setAttribute("fill","#ffffff");var a=document.createElement("rect");a.setAttribute("id",this._blackId),a.setAttribute("fill","#000000"),t.append(e),e.append(o,n),n.append(i),i.append(r,a),document.body.append(t),this._svgRoot=e,this._block=t},e.prototype._createOverlayElements=function(){var t=document.createElement("div"),e=document.createElement("div"),o=document.createElement("div"),n=document.createElement("div");t.classList.add(s.ClassNames.SHADOW_OVERLAY,s.ClassNames.SHADOW_OVERLAY_TOP),e.classList.add(s.ClassNames.SHADOW_OVERLAY,s.ClassNames.SHADOW_OVERLAY_RIGHT),o.classList.add(s.ClassNames.SHADOW_OVERLAY,s.ClassNames.SHADOW_OVERLAY_BOTTOM),n.classList.add(s.ClassNames.SHADOW_OVERLAY,s.ClassNames.SHADOW_OVERLAY_LEFT),this._block.append(t,e,o,n),this._overlayBlockT=t,this._overlayBlockR=e,this._overlayBlockB=o,this._overlayBlockL=n},e.prototype._updateSvg=function(){var t=this._config.color,e=String(window.innerWidth/2),o=String(window.innerHeight/2),n=String(0),i=String(0),r=String(0),s=String(0);if(this._targetElement){var l=this._targetElement.getBoundingClientRect();e=String(l.left-this._config.offset),o=String(l.top-this._config.offset),n=String(l.width+2*this._config.offset),i=String(l.height+2*this._config.offset),r=String(this._config.borderRadius),s=String(this._config.borderRadius)}this._resetAnimations(),this._svgRoot.append(this._createAnimation({targetId:"#".concat(this._shadowId),attribute:"fill",from:null===this._color?t:this._color,to:t,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"x",from:null===this._x?e:this._x,to:e,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"y",from:null===this._y?o:this._y,to:o,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"width",from:null===this._width?n:this._width,to:n,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"height",from:null===this._height?i:this._height,to:i,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"rx",from:null===this._rx?r:this._rx,to:r,duration:(0,a.default)(this._transitionDuration)}),this._createAnimation({targetId:"#".concat(this._blackId),attribute:"ry",from:null===this._ry?s:this._ry,to:s,duration:(0,a.default)(this._transitionDuration)})),this._x=e,this._y=o,this._width=n,this._height=i,this._rx=r,this._ry=s,this._color=t,this._svgRoot.outerHTML+="",this._svgRoot=this._block.querySelector("#".concat(this._svgRootId))},e.prototype._updateOverlay=function(){if(this._targetElement){var t=this._targetElement.getBoundingClientRect();this._overlayBlockT.style.height=(0,u.default)(t.top),this._overlayBlockR.style.top=(0,u.default)(t.top),this._overlayBlockR.style.left=(0,u.default)(t.left+t.width),this._overlayBlockR.style.width=(0,u.default)(window.innerWidth-(t.left+t.width)),this._overlayBlockR.style.height=(0,u.default)(t.height),this._overlayBlockB.style.top=(0,u.default)(t.top+t.height),this._overlayBlockB.style.height=(0,u.default)(window.innerHeight-(t.top+t.height)),this._overlayBlockL.style.top=(0,u.default)(t.top),this._overlayBlockL.style.width=(0,u.default)(t.left),this._overlayBlockL.style.height=(0,u.default)(t.height)}else this._overlayBlockT.style.width="100vw",this._overlayBlockT.style.height="100vh"},e.prototype._showSvg=function(){this._block.classList.add(s.ClassNames.SHADOW_VISIBLE)},e.prototype._showOverlay=function(){this._overlayBlockT.classList.add(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockR.classList.add(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockB.classList.add(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockL.classList.add(s.ClassNames.SHADOW_VISIBLE)},e.prototype._hideSvg=function(){this._block.classList.remove(s.ClassNames.SHADOW_VISIBLE)},e.prototype._hideOverlay=function(){this._overlayBlockT.classList.remove(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockR.classList.remove(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockB.classList.remove(s.ClassNames.SHADOW_VISIBLE),this._overlayBlockL.classList.remove(s.ClassNames.SHADOW_VISIBLE)},e.prototype._createAnimation=function(t){var e=t.targetId,o=t.attribute,n=t.from,i=t.to,r=t.duration,s=document.createElement("animate");return s.setAttribute("xlink:href",e),s.setAttribute("attributeName",o),s.setAttribute("from",n),s.setAttribute("to",i),s.setAttribute("dur",r),s.setAttribute("fill","freeze"),s},e.prototype._resetAnimations=function(){Array.from(this._svgRoot.querySelectorAll("animate")).forEach((function(t){return t.remove()}))},e}(r.Shadow);e.SvgShadow=c},338:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;var n=o(448),i=o(939),r=function(){function t(t,e){this._id=t.id,this._target=t.target,this._position=t.position,this._offsetX=t.offsetX,this._offsetY=t.offsetY,this._transitionDuration=t.transitionDuration,this._shadowConfig=t.shadow,this._hintConfig=t.hint,this._contentConfig=t.content,this._arrowConfig=t.arrow,this._stepParams=e,this._createStepContainer(),this._createShadow(),this._createHint(),this._createArrow(),this._setLifeCycleHooks(t)}return t.prototype._beforeMount=function(){},t.prototype._mounted=function(t){},t.prototype._beforeUnmount=function(t){},t.prototype._unmounted=function(){},Object.defineProperty(t.prototype,"id",{get:function(){return this._id},enumerable:!1,configurable:!0}),t.prototype.mount=function(){this._beforeMount(),this._setTargetElement(),this._scrollToTarget(),this._mountStepContainer(),this._mountShadow(),this._mountHint(),this._mountArrow(),this._mounted(this._targetElement)},t.prototype.unmount=function(){this._beforeUnmount(this._targetElement),this._unmountArrow(),this._unmountHint(),this._unmountShadow(),this._unmountStepContainer(),this._unmounted()},t.prototype._createStepContainer=function(){this._stepContainer=i.Globals.componentsFactory.createStepContainer({transitionDuration:this._transitionDuration})},t.prototype._createShadow=function(){this._shadow=i.Globals.componentsFactory.createShadow(this._shadowConfig,{transitionDuration:this._transitionDuration})},t.prototype._createHint=function(){this._hint=i.Globals.componentsFactory.createHint(this._hintConfig,this._stepParams),this._hint.setContent(this._contentConfig)},t.prototype._createArrow=function(){this._arrow=i.Globals.componentsFactory.createArrow(this._arrowConfig)},t.prototype._setLifeCycleHooks=function(t){this._beforeMount=(0,n.default)(t.beforeMount),this._mounted=(0,n.default)(t.mounted),this._beforeUnmount=(0,n.default)(t.beforeUnmount),this._unmounted=(0,n.default)(t.unmounted)},t.prototype._setTargetElement=function(){this._targetElement="string"==typeof this._target?document.querySelector(this._target):this._target},t.prototype._scrollToTarget=function(){if(this._targetElement){var t=this._targetElement.getBoundingClientRect(),e=0;window.innerHeight>t.height&&(e=(window.innerHeight-t.height)/2*.8);var o=Math.min(document.documentElement.scrollHeight,Math.max(0,document.documentElement.scrollTop+t.top-e));window.scrollTo({top:o})}},t.prototype._mountStepContainer=function(){this._stepContainer.mount({targetElement:this._targetElement,position:this._position,offsetX:this._offsetX,offsetY:this._offsetY})},t.prototype._unmountStepContainer=function(){this._stepContainer.unmount()},t.prototype._mountShadow=function(){this._shadow.mount(this._targetElement,this._shadowConfig)},t.prototype._unmountShadow=function(){this._shadow.unmount()},t.prototype._mountHint=function(){this._hint.mount(),this._hint.elem&&this._stepContainer.append(this._hint.elem)},t.prototype._unmountHint=function(){this._hint.unmount()},t.prototype._mountArrow=function(){if(this._targetElement){var t=this._hint.elem.getBoundingClientRect();this._arrow.mount(this._arrowConfig,{hintRect:t,position:this._position}),this._arrow.elem&&this._stepContainer.append(this._arrow.elem)}},t.prototype._unmountArrow=function(){this._arrow.unmount()},t}();e.Step=r},645:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StepContainer=void 0;var n=o(558),i=o(106),r=o(144),s=o(405),a=o(221),l=o(90),u=function(){function t(t){this._createComponents(t),this._resizeCallback=(0,r.default)(this._updatePosition.bind(this)).bind(this)}return t.prototype.mount=function(t){document.body.append(this._container),this._targetElement=t.targetElement,this._position=t.position,this._offsetX=t.offsetX,this._offsetY=t.offsetY,this._updatePosition(),window.addEventListener("resize",this._resizeCallback)},t.prototype.unmount=function(){this._container.remove(),window.removeEventListener("resize",this._resizeCallback)},t.prototype.show=function(){this._container.classList.add(n.ClassNames.HINT_WRAP_VISIBLE)},t.prototype.hide=function(){this._container.classList.add(n.ClassNames.HINT_WRAP_VISIBLE)},t.prototype.append=function(t){t&&this._slot.append(t)},t.prototype._createComponents=function(t){var e=document.createElement("div");e.classList.add(n.ClassNames.HINT_WRAP),e.style.transition="all ".concat((0,s.default)(t.transitionDuration)," linear");var o=document.createElement("div");o.classList.add(n.ClassNames.HINT_WRAP_INNER),e.append(o),this._container=e,this._slot=o},t.prototype._updatePosition=function(){if(!this._targetElement)return this._container.style.position="fixed",this._container.style.alignItems="center",this._container.style.justifyContent="center",(0,l.default)(this._container,{top:(0,a.default)(window.innerHeight/2),left:(0,a.default)(window.innerWidth/2)}),void(0,l.default)(this._slot,{});var t=this._targetElement.getBoundingClientRect();switch(this._container.style.position="absolute",this._position){case i.Position.Top:default:this._container.style.alignItems="center",this._container.style.justifyContent="center",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top-this._offsetY),left:(0,a.default)(t.left+t.width/2)}),(0,l.default)(this._slot,{bottom:(0,a.default)(0)});break;case i.Position.TopLeft:this._container.style.alignItems="center",this._container.style.justifyContent="flex-start",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top-this._offsetY),left:(0,a.default)(t.left)}),(0,l.default)(this._slot,{bottom:(0,a.default)(0),left:(0,a.default)(0)});break;case i.Position.TopRight:this._container.style.alignItems="center",this._container.style.justifyContent="flex-end",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top-this._offsetY),left:(0,a.default)(t.right)}),(0,l.default)(this._slot,{bottom:(0,a.default)(0),right:(0,a.default)(0)});break;case i.Position.Right:this._container.style.alignItems="center",this._container.style.justifyContent="flex-start",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top+t.height/2),left:(0,a.default)(t.left+t.width+this._offsetX)}),(0,l.default)(this._slot,{left:(0,a.default)(0)});break;case i.Position.RightTop:this._container.style.alignItems="flex-start",this._container.style.justifyContent="flex-start",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top),left:(0,a.default)(t.right+this._offsetX)}),(0,l.default)(this._slot,{top:(0,a.default)(0),left:(0,a.default)(0)});break;case i.Position.RightBottom:this._slot.style.alignItems="flex-end",this._slot.style.justifyContent="flex-start",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.bottom),left:(0,a.default)(t.right+this._offsetX)}),(0,l.default)(this._slot,{left:(0,a.default)(0),bottom:(0,a.default)(0)});break;case i.Position.Bottom:this._container.style.alignItems="flex-start",this._container.style.justifyContent="center",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.bottom+this._offsetY),left:(0,a.default)(t.left+t.width/2)}),(0,l.default)(this._slot,{top:(0,a.default)(0)});break;case i.Position.BottomLeft:this._container.style.alignItems="flex-start",this._container.style.justifyContent="flex-start",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.bottom+this._offsetY),left:(0,a.default)(t.left)}),(0,l.default)(this._slot,{top:(0,a.default)(0),left:(0,a.default)(0)});break;case i.Position.BottomRight:this._container.style.alignItems="flex-start",this._container.style.justifyContent="flex-end",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.bottom+this._offsetY),left:(0,a.default)(t.left+t.width)}),(0,l.default)(this._slot,{top:(0,a.default)(0),right:(0,a.default)(0)});break;case i.Position.Left:this._container.style.alignItems="center",this._container.style.justifyContent="flex-end",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top+t.height/2),left:(0,a.default)(t.left-this._offsetX)}),(0,l.default)(this._slot,{right:(0,a.default)(0)});break;case i.Position.LeftTop:this._container.style.alignItems="flex-start",this._container.style.justifyContent="flex-end",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.top),left:(0,a.default)(t.left-this._offsetX)}),(0,l.default)(this._slot,{top:(0,a.default)(0),right:(0,a.default)(0)});break;case i.Position.LeftBottom:this._container.style.alignItems="flex-end",this._container.style.justifyContent="flex-end",(0,l.default)(this._container,{top:(0,a.default)(document.documentElement.scrollTop+t.bottom),left:(0,a.default)(t.left-this._offsetX)}),(0,l.default)(this._slot,{bottom:(0,a.default)(0),right:(0,a.default)(0)})}},t}();e.StepContainer=u},530:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.StepContainerFactory=void 0;var n=o(645),i=function(){function t(){}return t.create=function(t){return this._stepContainer||(this._stepContainer=new n.StepContainer(t)),this._stepContainer},t}();e.StepContainerFactory=i},186:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LinkedList=void 0;var o=function(){function t(){}return t.prototype.add=function(t){var e=new n(t);this._head||this._tail?(e.previous=this._tail,this._tail.next=e,this._tail=e):this._head=this._tail=e},t.prototype.getFirst=function(){return this._head},t.prototype.getLast=function(){return this._tail},t.prototype.getById=function(t){for(var e=this._head;e&&e.value.id!==t;)e=e.next;return e||null},t}();e.LinkedList=o;var n=function(){function t(t){this.value=t}return Object.defineProperty(t.prototype,"value",{get:function(){return this._value},set:function(t){this._value=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"previous",{get:function(){return this._previous},set:function(t){this._previous=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"next",{get:function(){return this._next},set:function(t){this._next=t},enumerable:!1,configurable:!0}),t}()},144:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,o){var n;return void 0===e&&(e=50),function(){var i=this,r=arguments,s=function(){n=null,o||t.apply(i,r)},a=o&&!n;clearTimeout(n),n=setTimeout(s,e),a&&t.apply(i,r)}}},448:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0});var n=o(542);e.default=function(t){return"function"!=typeof t?function(){}:function(){for(var e=[],o=0;o<arguments.length;o++)e[o]=arguments[o];try{t.apply(void 0,e)}catch(t){(0,n.default)(t)}}}},405:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return"".concat(t/1e3,"s")}},87:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return void 0!==t}},221:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return"".concat(t,"px")}},90:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0});var n=o(87);e.default=function(t,e){["top","right","bottom","left"].forEach((function(o){(0,n.default)(e[o])?t.style[o]=e[o]:t.style.removeProperty(o)}))}},738:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){throw new Error(t)}},542:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){throw console.warn(t)}}},i={};function r(t){var e=i[t];if(void 0!==e)return e.exports;var o=i[t]={exports:{}};return n[t].call(o.exports,o,o.exports,r),o.exports}r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},t=r(362),e=r(939),o=r(706),r(545),e.Globals.componentsFactory=new o.VanillaComponentsFactory,window.Newbie=t.Newbie})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VixFQUEyQjhHLHlCQUNyRXNKLE9BQU9oRSxPQUFTdE0sRUFBU3NNLFEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvZW50cnktdmFuaWxsYS50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9DbGFzc05hbWUudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvRGVmYXVsdFZhbHVlcy50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9FcnJvci50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9Qb3NpdGlvbi50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9BcnJvdy9BcnJvd0ZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvQXJyb3cvTnVsbEFycm93LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL0Fycm93L1RyaWFuZ2xlQXJyb3cudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvQ29tcG9uZW50c0ZhY3RvcnkvQ29tcG9uZW50c0ZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvQ29tcG9uZW50c0ZhY3RvcnkvVmFuaWxsYUNvbXBvbmVudHNGYWN0b3J5LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL0NvbmZpZy50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9HbG9iYWxzLnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL0hpbnQvSGludC50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9IaW50L0hpbnRGYWN0b3J5LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL0hpbnQvVmFuaWxsYUhpbnQudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvSGludC9WdWVIaW50LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL05ld2JpZS50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9TaGFkb3cvTnVsbFNoYWRvdy50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9TaGFkb3cvU2hhZG93LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL1NoYWRvdy9TaGFkb3dGYWN0b3J5LnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL2NsYXNzL1NoYWRvdy9TdmdTaGFkb3cudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvU3RlcC50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9jbGFzcy9TdGVwQ29udGFpbmVyL1N0ZXBDb250YWluZXIudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvY2xhc3MvU3RlcENvbnRhaW5lci9TdGVwQ29udGFpbmVyRmFjdG9yeS50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS9oZWxwZXJzL0xpbmtlZExpc3QudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvdXRpbHMvZGVib3VuY2UudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvdXRpbHMvZ2V0Q2FsbGJhY2sudHMiLCJ3ZWJwYWNrOi8vbmV3YmllLmpzLy4vc3JjL2NvcmUvdXRpbHMvZ2V0VHJhbnNpdGlvbkR1cmF0aW9uLnRzIiwid2VicGFjazovL25ld2JpZS5qcy8uL3NyYy9jb3JlL3V0aWxzL2lzRGVmaW5lZC50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS91dGlscy9weC50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS91dGlscy9zZXRQb3NpdGlvbi50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS91dGlscy90aHJvdy50cyIsIndlYnBhY2s6Ly9uZXdiaWUuanMvLi9zcmMvY29yZS91dGlscy93YXJuLnRzIiwid2VicGFjazovL25ld2JpZS5qcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9uZXdiaWUuanMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBOZXdiaWVfMSA9IHJlcXVpcmUoXCIuL2NvcmUvY2xhc3MvTmV3YmllXCIpO1xudmFyIEdsb2JhbHNfMSA9IHJlcXVpcmUoXCIuL2NvcmUvY2xhc3MvR2xvYmFsc1wiKTtcbnZhciBWYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuL2NvcmUvY2xhc3MvQ29tcG9uZW50c0ZhY3RvcnkvVmFuaWxsYUNvbXBvbmVudHNGYWN0b3J5XCIpO1xucmVxdWlyZShcIi4vYXNzZXRzL3Njc3Mvc3R5bGUuc2Nzc1wiKTtcbkdsb2JhbHNfMS5HbG9iYWxzLmNvbXBvbmVudHNGYWN0b3J5ID0gbmV3IFZhbmlsbGFDb21wb25lbnRzRmFjdG9yeV8xLlZhbmlsbGFDb21wb25lbnRzRmFjdG9yeSgpO1xud2luZG93Lk5ld2JpZSA9IE5ld2JpZV8xLk5ld2JpZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DbGFzc05hbWVzID0gdm9pZCAwO1xudmFyIENsYXNzTmFtZXM7XG4oZnVuY3Rpb24gKENsYXNzTmFtZXMpIHtcbiAgICBDbGFzc05hbWVzW1wiSElOVF9XUkFQXCJdID0gXCJuZXdiaWUtaGludC13cmFwXCI7XG4gICAgQ2xhc3NOYW1lc1tcIkhJTlRfV1JBUF9JTk5FUlwiXSA9IFwibmV3YmllLWhpbnQtd3JhcF9faW5uZXJcIjtcbiAgICBDbGFzc05hbWVzW1wiSElOVF9XUkFQX1ZJU0lCTEVcIl0gPSBcIm5ld2JpZS1oaW50LXdyYXBfdmlzaWJsZVwiO1xuICAgIENsYXNzTmFtZXNbXCJISU5UXCJdID0gXCJuZXdiaWUtaGludFwiO1xuICAgIENsYXNzTmFtZXNbXCJTSEFET1dcIl0gPSBcIm5ld2JpZS1zaGFkb3dcIjtcbiAgICBDbGFzc05hbWVzW1wiU0hBRE9XX1NWR1wiXSA9IFwibmV3YmllLXNoYWRvd19fc3ZnXCI7XG4gICAgQ2xhc3NOYW1lc1tcIlNIQURPV19WSVNJQkxFXCJdID0gXCJuZXdiaWUtc2hhZG93X3Zpc2libGVcIjtcbiAgICBDbGFzc05hbWVzW1wiU0hBRE9XX09WRVJMQVlcIl0gPSBcIm5ld2JpZS1zaGFkb3dfX292ZXJsYXlcIjtcbiAgICBDbGFzc05hbWVzW1wiU0hBRE9XX09WRVJMQVlfVE9QXCJdID0gXCJuZXdiaWUtc2hhZG93X19vdmVybGF5X3RvcFwiO1xuICAgIENsYXNzTmFtZXNbXCJTSEFET1dfT1ZFUkxBWV9SSUdIVFwiXSA9IFwibmV3YmllLXNoYWRvd19fb3ZlcmxheV9yaWdodFwiO1xuICAgIENsYXNzTmFtZXNbXCJTSEFET1dfT1ZFUkxBWV9CT1RUT01cIl0gPSBcIm5ld2JpZS1zaGFkb3dfX292ZXJsYXlfYm90dG9tXCI7XG4gICAgQ2xhc3NOYW1lc1tcIlNIQURPV19PVkVSTEFZX0xFRlRcIl0gPSBcIm5ld2JpZS1zaGFkb3dfX292ZXJsYXlfbGVmdFwiO1xuICAgIENsYXNzTmFtZXNbXCJBUlJPV1wiXSA9IFwibmV3YmllLWFycm93XCI7XG4gICAgQ2xhc3NOYW1lc1tcIkFSUk9XX1ZJU0lCTEVcIl0gPSBcIm5ld2JpZS1hcnJvd192aXNpYmxlXCI7XG59KShDbGFzc05hbWVzID0gZXhwb3J0cy5DbGFzc05hbWVzIHx8IChleHBvcnRzLkNsYXNzTmFtZXMgPSB7fSkpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFRkFVTFRfVkFMVUVTID0gdm9pZCAwO1xudmFyIFBvc2l0aW9uXzEgPSByZXF1aXJlKFwiLi9Qb3NpdGlvblwiKTtcbmV4cG9ydHMuREVGQVVMVF9WQUxVRVMgPSB7XG4gICAgcG9zaXRpb246IFBvc2l0aW9uXzEuUG9zaXRpb24uQm90dG9tLFxuICAgIG9mZnNldFg6IDEwLFxuICAgIG9mZnNldFk6IDEwLFxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogMjAwLFxuICAgIHNoYWRvdzoge1xuICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICBjb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjMpJyxcbiAgICAgICAgb2Zmc2V0OiAxMCxcbiAgICAgICAgYm9yZGVyUmFkaXVzOiA1LFxuICAgICAgICByb290Q29tcG9uZW50OiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICAgIGRpc2FibGVTY3JvbGw6IHRydWUsXG4gICAgfSxcbiAgICBhcnJvdzoge1xuICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICBzaXplOiA1LFxuICAgICAgICBjb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICBvZmZzZXRYOiAwLFxuICAgICAgICBvZmZzZXRZOiAwLFxuICAgIH0sXG59O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVycm9yID0gdm9pZCAwO1xudmFyIEVycm9yO1xuKGZ1bmN0aW9uIChFcnJvcikge1xuICAgIEVycm9yW1wiTk9fQ09ORklHX1BST1ZJREVEXCJdID0gXCJObyBjb25maWcgcHJvdmlkZWQhXCI7XG4gICAgRXJyb3JbXCJJRF9FUlJPUlwiXSA9IFwiU3BlY2lmeSB1bmlxdWUgaWQgZm9yIGVhY2ggc3RlcCFcIjtcbiAgICBFcnJvcltcIk5PX1NURVBTX1BST1ZJREVEXCJdID0gXCJObyBzdGVwcyBwcm92aWRlZCFcIjtcbiAgICBFcnJvcltcIk5PX0hJTlRfUFJPVklERURcIl0gPSBcIk5vIGhpbnQgcHJvdmlkZWQhXCI7XG4gICAgRXJyb3JbXCJOT19ISU5UX0NPTVBPTkVOVF9QUk9WSURFRFwiXSA9IFwiTm8gaGludCBjb21wb25lbnQgcHJvdmlkZWQhXCI7XG59KShFcnJvciA9IGV4cG9ydHMuRXJyb3IgfHwgKGV4cG9ydHMuRXJyb3IgPSB7fSkpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvc2l0aW9uID0gdm9pZCAwO1xudmFyIFBvc2l0aW9uO1xuKGZ1bmN0aW9uIChQb3NpdGlvbikge1xuICAgIFBvc2l0aW9uW1wiVG9wXCJdID0gXCJ0b3BcIjtcbiAgICBQb3NpdGlvbltcIlRvcExlZnRcIl0gPSBcInRvcC1sZWZ0XCI7XG4gICAgUG9zaXRpb25bXCJUb3BSaWdodFwiXSA9IFwidG9wLXJpZ2h0XCI7XG4gICAgUG9zaXRpb25bXCJSaWdodFwiXSA9IFwicmlnaHRcIjtcbiAgICBQb3NpdGlvbltcIlJpZ2h0VG9wXCJdID0gXCJyaWdodC10b3BcIjtcbiAgICBQb3NpdGlvbltcIlJpZ2h0Qm90dG9tXCJdID0gXCJyaWdodC1ib3R0b21cIjtcbiAgICBQb3NpdGlvbltcIkJvdHRvbVwiXSA9IFwiYm90dG9tXCI7XG4gICAgUG9zaXRpb25bXCJCb3R0b21MZWZ0XCJdID0gXCJib3R0b20tbGVmdFwiO1xuICAgIFBvc2l0aW9uW1wiQm90dG9tUmlnaHRcIl0gPSBcImJvdHRvbS1yaWdodFwiO1xuICAgIFBvc2l0aW9uW1wiTGVmdFwiXSA9IFwibGVmdFwiO1xuICAgIFBvc2l0aW9uW1wiTGVmdFRvcFwiXSA9IFwibGVmdC10b3BcIjtcbiAgICBQb3NpdGlvbltcIkxlZnRCb3R0b21cIl0gPSBcImxlZnQtYm90dG9tXCI7XG4gICAgUG9zaXRpb25bXCJDZW50ZXJcIl0gPSBcImNlbnRlclwiO1xufSkoUG9zaXRpb24gPSBleHBvcnRzLlBvc2l0aW9uIHx8IChleHBvcnRzLlBvc2l0aW9uID0ge30pKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcnJvd0ZhY3RvcnkgPSB2b2lkIDA7XG52YXIgTnVsbEFycm93XzEgPSByZXF1aXJlKFwiLi9OdWxsQXJyb3dcIik7XG52YXIgVHJpYW5nbGVBcnJvd18xID0gcmVxdWlyZShcIi4vVHJpYW5nbGVBcnJvd1wiKTtcbnZhciBBcnJvd0ZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXJyb3dGYWN0b3J5KCkge1xuICAgIH1cbiAgICBBcnJvd0ZhY3RvcnkuY3JlYXRlID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fdHJpYW5nbGVBcnJvdykge1xuICAgICAgICAgICAgICAgIHRoaXMuX3RyaWFuZ2xlQXJyb3cgPSBuZXcgVHJpYW5nbGVBcnJvd18xLlRyaWFuZ2xlQXJyb3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90cmlhbmdsZUFycm93O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9udWxsQXJyb3cpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9udWxsQXJyb3cgPSBuZXcgTnVsbEFycm93XzEuTnVsbEFycm93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbnVsbEFycm93O1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQXJyb3dGYWN0b3J5O1xufSgpKTtcbmV4cG9ydHMuQXJyb3dGYWN0b3J5ID0gQXJyb3dGYWN0b3J5O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk51bGxBcnJvdyA9IHZvaWQgMDtcbnZhciBOdWxsQXJyb3cgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTnVsbEFycm93KCkge1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTnVsbEFycm93LnByb3RvdHlwZSwgXCJlbGVtXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE51bGxBcnJvdy5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoKSB7IH07XG4gICAgTnVsbEFycm93LnByb3RvdHlwZS51bm1vdW50ID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIHJldHVybiBOdWxsQXJyb3c7XG59KCkpO1xuZXhwb3J0cy5OdWxsQXJyb3cgPSBOdWxsQXJyb3c7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJpYW5nbGVBcnJvdyA9IHZvaWQgMDtcbnZhciBDbGFzc05hbWVfMSA9IHJlcXVpcmUoXCIuLi8uLi9DbGFzc05hbWVcIik7XG52YXIgUG9zaXRpb25fMSA9IHJlcXVpcmUoXCIuLi8uLi9Qb3NpdGlvblwiKTtcbnZhciBzZXRQb3NpdGlvbl8xID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL3NldFBvc2l0aW9uXCIpO1xudmFyIHB4XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvcHhcIik7XG52YXIgVHJpYW5nbGVBcnJvdyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUcmlhbmdsZUFycm93KCkge1xuICAgICAgICB0aGlzLl9jcmVhdGVFbGVtZW50KCk7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUcmlhbmdsZUFycm93LnByb3RvdHlwZSwgXCJlbGVtXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY29tcG9uZW50O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgVHJpYW5nbGVBcnJvdy5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoY29uZmlnLCBzZXR0aW5ncykge1xuICAgICAgICB0aGlzLl91cGRhdGVTaXplKGNvbmZpZy5zaXplKTtcbiAgICAgICAgdGhpcy5fdXBkYXRlQ29sb3IoY29uZmlnLmNvbG9yKTtcbiAgICAgICAgdGhpcy5fdXBkYXRlUG9zaXRpb24oY29uZmlnLCBzZXR0aW5ncyk7XG4gICAgICAgIHRoaXMuX3Nob3coKTtcbiAgICB9O1xuICAgIFRyaWFuZ2xlQXJyb3cucHJvdG90eXBlLnVubW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2hpZGUoKTtcbiAgICB9O1xuICAgIFRyaWFuZ2xlQXJyb3cucHJvdG90eXBlLl9zaG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9jb21wb25lbnQuY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLkFSUk9XX1ZJU0lCTEUpO1xuICAgIH07XG4gICAgVHJpYW5nbGVBcnJvdy5wcm90b3R5cGUuX2hpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2NvbXBvbmVudC5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuQVJST1dfVklTSUJMRSk7XG4gICAgfTtcbiAgICBUcmlhbmdsZUFycm93LnByb3RvdHlwZS5fY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNvbXBvbmVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjb21wb25lbnQuY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLkFSUk9XKTtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50ID0gY29tcG9uZW50O1xuICAgIH07XG4gICAgVHJpYW5nbGVBcnJvdy5wcm90b3R5cGUuX3VwZGF0ZVNpemUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICAgICAgICB0aGlzLl9jb21wb25lbnQuc3R5bGUud2lkdGggPSAoMCwgcHhfMS5kZWZhdWx0KShzaXplICogMik7XG4gICAgICAgIHRoaXMuX2NvbXBvbmVudC5zdHlsZS5oZWlnaHQgPSAoMCwgcHhfMS5kZWZhdWx0KShzaXplICogMik7XG4gICAgfTtcbiAgICBUcmlhbmdsZUFycm93LnByb3RvdHlwZS5fdXBkYXRlQ29sb3IgPSBmdW5jdGlvbiAoY29sb3IpIHtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xuICAgIH07XG4gICAgVHJpYW5nbGVBcnJvdy5wcm90b3R5cGUuX3VwZGF0ZVBvc2l0aW9uID0gZnVuY3Rpb24gKGNvbmZpZywgX2EpIHtcbiAgICAgICAgdmFyIGhpbnRSZWN0ID0gX2EuaGludFJlY3QsIHBvc2l0aW9uID0gX2EucG9zaXRpb247XG4gICAgICAgIHZhciBzaXplID0gY29uZmlnLnNpemU7XG4gICAgICAgIHZhciBoYWxmT2ZBcnJvd1dpZHRoID0gKHNpemUgKiBNYXRoLnNxcnQoMikpIC8gMjtcbiAgICAgICAgdmFyIG9mZnNldFggPSBNYXRoLm1heChoYWxmT2ZBcnJvd1dpZHRoLCBjb25maWcub2Zmc2V0WCk7XG4gICAgICAgIHZhciBvZmZzZXRZID0gTWF0aC5tYXgoaGFsZk9mQXJyb3dXaWR0aCwgY29uZmlnLm9mZnNldFkpO1xuICAgICAgICBzd2l0Y2ggKHBvc2l0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uVG9wOlxuICAgICAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX2NvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgICAgICBib3R0b206ICgwLCBweF8xLmRlZmF1bHQpKC1zaXplKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkoTWF0aC5tYXgoaGludFJlY3Qud2lkdGggLyAyIC0gaGFsZk9mQXJyb3dXaWR0aCwgb2Zmc2V0WCkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLlRvcExlZnQ6XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29tcG9uZW50LCB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5Ub3BSaWdodDpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAoMCwgcHhfMS5kZWZhdWx0KSgtc2l6ZSksXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5SaWdodDpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKE1hdGgubWF4KGhpbnRSZWN0LmhlaWdodCAvIDIgLSBoYWxmT2ZBcnJvd1dpZHRoLCBvZmZzZXRZKSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uUmlnaHRUb3A6XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29tcG9uZW50LCB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKC1zaXplKSxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRZKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5SaWdodEJvdHRvbTpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICBib3R0b206ICgwLCBweF8xLmRlZmF1bHQpKG9mZnNldFkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLkJvdHRvbTpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KSgtc2l6ZSksXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKE1hdGgubWF4KGhpbnRSZWN0LndpZHRoIC8gMiAtIGhhbGZPZkFycm93V2lkdGgsIG9mZnNldFgpKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb21wb25lbnQuc3R5bGUudG9wID0gKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLkJvdHRvbUxlZnQ6XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29tcG9uZW50LCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5Cb3R0b21SaWdodDpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KSgtc2l6ZSksXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5MZWZ0OlxuICAgICAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX2NvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgICAgICByaWdodDogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKE1hdGgubWF4KGhpbnRSZWN0LmhlaWdodCAvIDIgLSBoYWxmT2ZBcnJvd1dpZHRoLCBvZmZzZXRZKSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uTGVmdFRvcDpcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6ICgwLCBweF8xLmRlZmF1bHQpKC1zaXplKSxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShvZmZzZXRZKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5MZWZ0Qm90dG9tOlxuICAgICAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX2NvbXBvbmVudCwge1xuICAgICAgICAgICAgICAgICAgICByaWdodDogKDAsIHB4XzEuZGVmYXVsdCkoLXNpemUpLFxuICAgICAgICAgICAgICAgICAgICBib3R0b206ICgwLCBweF8xLmRlZmF1bHQpKG9mZnNldFkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gVHJpYW5nbGVBcnJvdztcbn0oKSk7XG5leHBvcnRzLlRyaWFuZ2xlQXJyb3cgPSBUcmlhbmdsZUFycm93O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBvbmVudHNGYWN0b3J5ID0gdm9pZCAwO1xudmFyIFNoYWRvd0ZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9TaGFkb3cvU2hhZG93RmFjdG9yeVwiKTtcbnZhciBBcnJvd0ZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9BcnJvdy9BcnJvd0ZhY3RvcnlcIik7XG52YXIgU3RlcENvbnRhaW5lckZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9TdGVwQ29udGFpbmVyL1N0ZXBDb250YWluZXJGYWN0b3J5XCIpO1xudmFyIENvbXBvbmVudHNGYWN0b3J5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbXBvbmVudHNGYWN0b3J5KCkge1xuICAgICAgICAvKiBjb250aW51ZSByZWdhcmRsZXNzIG9mIGVycm9yICovXG4gICAgfVxuICAgIENvbXBvbmVudHNGYWN0b3J5LnByb3RvdHlwZS5jcmVhdGVTaGFkb3cgPSBmdW5jdGlvbiAoY29uZmlnLCBzZXR0aW5ncykge1xuICAgICAgICByZXR1cm4gU2hhZG93RmFjdG9yeV8xLlNoYWRvd0ZhY3RvcnkuY3JlYXRlKGNvbmZpZywgc2V0dGluZ3MpO1xuICAgIH07XG4gICAgQ29tcG9uZW50c0ZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZUFycm93ID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICByZXR1cm4gQXJyb3dGYWN0b3J5XzEuQXJyb3dGYWN0b3J5LmNyZWF0ZShjb25maWcpO1xuICAgIH07XG4gICAgQ29tcG9uZW50c0ZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZVN0ZXBDb250YWluZXIgPSBmdW5jdGlvbiAocGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gU3RlcENvbnRhaW5lckZhY3RvcnlfMS5TdGVwQ29udGFpbmVyRmFjdG9yeS5jcmVhdGUocGF5bG9hZCk7XG4gICAgfTtcbiAgICByZXR1cm4gQ29tcG9uZW50c0ZhY3Rvcnk7XG59KCkpO1xuZXhwb3J0cy5Db21wb25lbnRzRmFjdG9yeSA9IENvbXBvbmVudHNGYWN0b3J5O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnkgPSB2b2lkIDA7XG52YXIgSGludEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9IaW50L0hpbnRGYWN0b3J5XCIpO1xudmFyIENvbXBvbmVudHNGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi9Db21wb25lbnRzRmFjdG9yeVwiKTtcbnZhciBWYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFZhbmlsbGFDb21wb25lbnRzRmFjdG9yeSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBWYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnkoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgVmFuaWxsYUNvbXBvbmVudHNGYWN0b3J5LnByb3RvdHlwZS5jcmVhdGVIaW50ID0gZnVuY3Rpb24gKGNvbmZpZywgc2V0dGluZ3MpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9oaW50RmFjdG9yeSkge1xuICAgICAgICAgICAgdGhpcy5faGludEZhY3RvcnkgPSBuZXcgSGludEZhY3RvcnlfMS5WYW5pbGxhSGludEZhY3RvcnkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5faGludEZhY3RvcnkuY3JlYXRlKGNvbmZpZywgc2V0dGluZ3MpO1xuICAgIH07XG4gICAgcmV0dXJuIFZhbmlsbGFDb21wb25lbnRzRmFjdG9yeTtcbn0oQ29tcG9uZW50c0ZhY3RvcnlfMS5Db21wb25lbnRzRmFjdG9yeSkpO1xuZXhwb3J0cy5WYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnkgPSBWYW5pbGxhQ29tcG9uZW50c0ZhY3Rvcnk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbmZpZyA9IHZvaWQgMDtcbnZhciBEZWZhdWx0VmFsdWVzXzEgPSByZXF1aXJlKFwiLi4vRGVmYXVsdFZhbHVlc1wiKTtcbnZhciBQb3NpdGlvbl8xID0gcmVxdWlyZShcIi4uL1Bvc2l0aW9uXCIpO1xudmFyIEVycm9yXzEgPSByZXF1aXJlKFwiLi4vRXJyb3JcIik7XG52YXIgaXNEZWZpbmVkXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvaXNEZWZpbmVkXCIpO1xudmFyIENvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDb25maWcoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbmZpZy5wcm90b3R5cGUsIFwiY29uZmlnXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQ29uZmlnLnByb3RvdHlwZS52YWxpZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9jb25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiBFcnJvcl8xLkVycm9yLk5PX0NPTkZJR19QUk9WSURFRDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy5fY29uZmlnLnN0ZXBzKSB8fFxuICAgICAgICAgICAgKEFycmF5LmlzQXJyYXkodGhpcy5fY29uZmlnLnN0ZXBzKSAmJiAhdGhpcy5fY29uZmlnLnN0ZXBzLmxlbmd0aCkpIHtcbiAgICAgICAgICAgIHJldHVybiBFcnJvcl8xLkVycm9yLk5PX1NURVBTX1BST1ZJREVEO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fY29uZmlnLmhpbnQgJiYgdGhpcy5fY29uZmlnLnN0ZXBzLnNvbWUoZnVuY3Rpb24gKHN0ZXApIHsgcmV0dXJuICFzdGVwLmhpbnQ7IH0pKSB7XG4gICAgICAgICAgICByZXR1cm4gRXJyb3JfMS5FcnJvci5OT19ISU5UX1BST1ZJREVEO1xuICAgICAgICB9XG4gICAgICAgIGlmICgodGhpcy5fY29uZmlnLmhpbnQgJiZcbiAgICAgICAgICAgICF0aGlzLl9jb25maWcuaGludC5jb21wb25lbnQgJiZcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5zdGVwcy5zb21lKGZ1bmN0aW9uIChzdGVwKSB7IHJldHVybiAhc3RlcC5oaW50OyB9KSkgfHxcbiAgICAgICAgICAgICghdGhpcy5fY29uZmlnLmhpbnQgJiZcbiAgICAgICAgICAgICAgICB0aGlzLl9jb25maWcuc3RlcHMuc29tZShmdW5jdGlvbiAoc3RlcCkgeyByZXR1cm4gc3RlcC5oaW50ICYmICFzdGVwLmhpbnQuY29tcG9uZW50OyB9KSkpIHtcbiAgICAgICAgICAgIHJldHVybiBFcnJvcl8xLkVycm9yLk5PX0hJTlRfQ09NUE9ORU5UX1BST1ZJREVEO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgQ29uZmlnLnByb3RvdHlwZS5yZXNvbHZlU3RlcENvbmZpZyA9IGZ1bmN0aW9uIChzdGVwSWQpIHtcbiAgICAgICAgdmFyIHN0ZXBDb25maWcgPSB0eXBlb2Ygc3RlcElkID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgPyB0aGlzLl9jb25maWcuc3RlcHMuZmluZChmdW5jdGlvbiAoc3RlcCkgeyByZXR1cm4gc3RlcC5pZCA9PT0gc3RlcElkOyB9KVxuICAgICAgICAgICAgOiB0aGlzLl9jb25maWcuc3RlcHNbc3RlcElkXTtcbiAgICAgICAgdmFyIGNvbmZpZyA9IHRoaXMuX2NvbmZpZztcbiAgICAgICAgaWYgKCEoMCwgaXNEZWZpbmVkXzEuZGVmYXVsdCkoc3RlcENvbmZpZy5pZCkpIHtcbiAgICAgICAgICAgIHN0ZXBDb25maWcuaWQgPSBcIk5vLiBcIi5jb25jYXQoc3RlcElkKTtcbiAgICAgICAgfVxuICAgICAgICBzdGVwQ29uZmlnLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRoaXMuX3Jlc29sdmUoY29uZmlnLCBzdGVwQ29uZmlnLCAndHJhbnNpdGlvbkR1cmF0aW9uJyk7XG4gICAgICAgIGlmIChzdGVwQ29uZmlnLnRhcmdldCkge1xuICAgICAgICAgICAgc3RlcENvbmZpZy5wb3NpdGlvbiA9IHRoaXMuX3Jlc29sdmUoY29uZmlnLCBzdGVwQ29uZmlnLCAncG9zaXRpb24nKTtcbiAgICAgICAgICAgIHN0ZXBDb25maWcub2Zmc2V0WCA9IHRoaXMuX3Jlc29sdmUoY29uZmlnLCBzdGVwQ29uZmlnLCAnb2Zmc2V0WCcpO1xuICAgICAgICAgICAgc3RlcENvbmZpZy5vZmZzZXRZID0gdGhpcy5fcmVzb2x2ZShjb25maWcsIHN0ZXBDb25maWcsICdvZmZzZXRZJyk7XG4gICAgICAgICAgICBzdGVwQ29uZmlnLmFycm93ID0gdGhpcy5fcmVzb2x2ZU9iamVjdChjb25maWcsIHN0ZXBDb25maWcsICdhcnJvdycpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3RlcENvbmZpZy5wb3NpdGlvbiA9IFBvc2l0aW9uXzEuUG9zaXRpb24uQ2VudGVyO1xuICAgICAgICAgICAgc3RlcENvbmZpZy5vZmZzZXRYID0gMDtcbiAgICAgICAgICAgIHN0ZXBDb25maWcub2Zmc2V0WSA9IDA7XG4gICAgICAgICAgICBzdGVwQ29uZmlnLmFycm93ID0geyBlbmFibGVkOiBmYWxzZSB9O1xuICAgICAgICB9XG4gICAgICAgIHN0ZXBDb25maWcuc2hhZG93ID0gdGhpcy5fcmVzb2x2ZU9iamVjdChjb25maWcsIHN0ZXBDb25maWcsICdzaGFkb3cnKTtcbiAgICAgICAgc3RlcENvbmZpZy5oaW50ID0gdGhpcy5fcmVzb2x2ZU9iamVjdChjb25maWcsIHN0ZXBDb25maWcsICdoaW50Jyk7XG4gICAgICAgIGlmICghKDAsIGlzRGVmaW5lZF8xLmRlZmF1bHQpKHN0ZXBDb25maWcuY29udGVudCkpIHtcbiAgICAgICAgICAgIHN0ZXBDb25maWcuY29udGVudCA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdGVwQ29uZmlnO1xuICAgIH07XG4gICAgQ29uZmlnLnByb3RvdHlwZS5fcmVzb2x2ZSA9IGZ1bmN0aW9uIChjb25maWcsIHN0ZXBDb25maWcsIHBhcmFtKSB7XG4gICAgICAgIGlmICgoMCwgaXNEZWZpbmVkXzEuZGVmYXVsdCkoc3RlcENvbmZpZ1twYXJhbV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RlcENvbmZpZ1twYXJhbV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIGlzRGVmaW5lZF8xLmRlZmF1bHQpKGNvbmZpZ1twYXJhbV0pXG4gICAgICAgICAgICAgICAgPyBjb25maWdbcGFyYW1dXG4gICAgICAgICAgICAgICAgOiBEZWZhdWx0VmFsdWVzXzEuREVGQVVMVF9WQUxVRVNbcGFyYW1dO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDb25maWcucHJvdG90eXBlLl9yZXNvbHZlT2JqZWN0ID0gZnVuY3Rpb24gKGNvbmZpZywgc3RlcENvbmZpZywgcGFyYW0pIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBjb25maWdbcGFyYW1dKSwgc3RlcENvbmZpZ1twYXJhbV0pO1xuICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gRGVmYXVsdFZhbHVlc18xLkRFRkFVTFRfVkFMVUVTW3BhcmFtXSB8fCB7fTtcbiAgICAgICAgT2JqZWN0LmtleXMoZGVmYXVsdFZhbHVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIGlmICghKDAsIGlzRGVmaW5lZF8xLmRlZmF1bHQpKHJlc3VsdFtrZXldKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gZGVmYXVsdFZhbHVlW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgcmV0dXJuIENvbmZpZztcbn0oKSk7XG5leHBvcnRzLkNvbmZpZyA9IENvbmZpZztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HbG9iYWxzID0gdm9pZCAwO1xudmFyIEdsb2JhbHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gR2xvYmFscygpIHtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEdsb2JhbHMsIFwiY29tcG9uZW50c0ZhY3RvcnlcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb21wb25lbnRzRmFjdG9yeTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoZmFjdG9yeSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NvbXBvbmVudHNGYWN0b3J5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fY29tcG9uZW50c0ZhY3RvcnkgPSBmYWN0b3J5O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgR2xvYmFscy5fY29tcG9uZW50c0ZhY3RvcnkgPSBudWxsO1xuICAgIHJldHVybiBHbG9iYWxzO1xufSgpKTtcbmV4cG9ydHMuR2xvYmFscyA9IEdsb2JhbHM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGludCA9IHZvaWQgMDtcbnZhciBIaW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEhpbnQoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuX2NvbnRlbnQgPSB7fTtcbiAgICAgICAgLyogY29udGludWUgcmVnYXJkbGVzcyBvZiBlcnJvciAqL1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSGludC5wcm90b3R5cGUsIFwiZWxlbVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbXBvbmVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEhpbnQucHJvdG90eXBlLm1vdW50ID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIEhpbnQucHJvdG90eXBlLnVubW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2NvbXBvbmVudC5yZW1vdmUoKTtcbiAgICB9O1xuICAgIEhpbnQucHJvdG90eXBlLnNldENvbnRlbnQgPSBmdW5jdGlvbiAoY29udGVudCkge1xuICAgICAgICB0aGlzLl9jb250ZW50ID0gY29udGVudDtcbiAgICB9O1xuICAgIHJldHVybiBIaW50O1xufSgpKTtcbmV4cG9ydHMuSGludCA9IEhpbnQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVnVlSGludEZhY3RvcnkgPSBleHBvcnRzLlZhbmlsbGFIaW50RmFjdG9yeSA9IHZvaWQgMDtcbnZhciBWYW5pbGxhSGludF8xID0gcmVxdWlyZShcIi4vVmFuaWxsYUhpbnRcIik7XG52YXIgVnVlSGludF8xID0gcmVxdWlyZShcIi4vVnVlSGludFwiKTtcbnZhciBWYW5pbGxhSGludEZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVmFuaWxsYUhpbnRGYWN0b3J5KCkge1xuICAgIH1cbiAgICBWYW5pbGxhSGludEZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChjb25maWcsIHNldHRpbmdzKSB7XG4gICAgICAgIHJldHVybiBuZXcgVmFuaWxsYUhpbnRfMS5WYW5pbGxhSGludChjb25maWcsIHNldHRpbmdzKTtcbiAgICB9O1xuICAgIHJldHVybiBWYW5pbGxhSGludEZhY3Rvcnk7XG59KCkpO1xuZXhwb3J0cy5WYW5pbGxhSGludEZhY3RvcnkgPSBWYW5pbGxhSGludEZhY3Rvcnk7XG52YXIgVnVlSGludEZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVnVlSGludEZhY3RvcnkoVnVlKSB7XG4gICAgICAgIHRoaXMuX3Z1ZSA9IFZ1ZTtcbiAgICB9XG4gICAgVnVlSGludEZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChjb25maWcsIHNldHRpbmdzKSB7XG4gICAgICAgIHJldHVybiBuZXcgVnVlSGludF8xLlZ1ZUhpbnQoY29uZmlnLCBzZXR0aW5ncywgdGhpcy5fdnVlKTtcbiAgICB9O1xuICAgIHJldHVybiBWdWVIaW50RmFjdG9yeTtcbn0oKSk7XG5leHBvcnRzLlZ1ZUhpbnRGYWN0b3J5ID0gVnVlSGludEZhY3Rvcnk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZhbmlsbGFIaW50ID0gdm9pZCAwO1xudmFyIENsYXNzTmFtZV8xID0gcmVxdWlyZShcIi4uLy4uL0NsYXNzTmFtZVwiKTtcbnZhciBIaW50XzEgPSByZXF1aXJlKFwiLi9IaW50XCIpO1xudmFyIFZhbmlsbGFIaW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhWYW5pbGxhSGludCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBWYW5pbGxhSGludChjb25maWcsIHNldHRpbmdzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGNvbmZpZykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuX2NvbXBvbmVudCA9IGNvbmZpZy5jb21wb25lbnQ7XG4gICAgICAgIF90aGlzLl9jb21wb25lbnQuY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLkhJTlQpO1xuICAgICAgICBfdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBWYW5pbGxhSGludC5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3NldENvbnRlbnQoKTtcbiAgICAgICAgdGhpcy5fYWRkRGVmYXVsdEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfTtcbiAgICBWYW5pbGxhSGludC5wcm90b3R5cGUudW5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fcmVtb3ZlRGVmYXVsdEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudW5tb3VudC5jYWxsKHRoaXMpO1xuICAgIH07XG4gICAgVmFuaWxsYUhpbnQucHJvdG90eXBlLl9zZXRDb250ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLl9jb250ZW50KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciBjb21wb25lbnQgPSBfdGhpcy5fY29tcG9uZW50LnF1ZXJ5U2VsZWN0b3Ioa2V5KTtcbiAgICAgICAgICAgIGlmICghY29tcG9uZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29tcG9uZW50LmlubmVySFRNTCA9IF90aGlzLl9jb250ZW50W2tleV07XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgVmFuaWxsYUhpbnQucHJvdG90eXBlLl9hZGREZWZhdWx0RXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBnb05leHRCdG4gPSB0aGlzLl9jb21wb25lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3YmllLWdvLW5leHRdJyk7XG4gICAgICAgIGlmIChnb05leHRCdG4pIHtcbiAgICAgICAgICAgIGdvTmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3NldHRpbmdzLmdvTmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGdvUHJldkJ0biA9IHRoaXMuX2NvbXBvbmVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uZXdiaWUtZ28tcHJldmlvdXNdJyk7XG4gICAgICAgIGlmIChnb1ByZXZCdG4pIHtcbiAgICAgICAgICAgIGdvUHJldkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3NldHRpbmdzLmdvUHJldmlvdXMpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdG9wQnRuID0gdGhpcy5fY29tcG9uZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5ld2JpZS1zdG9wXScpO1xuICAgICAgICBpZiAoc3RvcEJ0bikge1xuICAgICAgICAgICAgc3RvcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3NldHRpbmdzLnN0b3ApO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBWYW5pbGxhSGludC5wcm90b3R5cGUuX3JlbW92ZURlZmF1bHRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGdvTmV4dEJ0biA9IHRoaXMuX2NvbXBvbmVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1uZXdiaWUtZ28tbmV4dF0nKTtcbiAgICAgICAgaWYgKGdvTmV4dEJ0bikge1xuICAgICAgICAgICAgZ29OZXh0QnRuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fc2V0dGluZ3MuZ29OZXh0KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZ29QcmV2QnRuID0gdGhpcy5fY29tcG9uZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5ld2JpZS1nby1wcmV2aW91c10nKTtcbiAgICAgICAgaWYgKGdvUHJldkJ0bikge1xuICAgICAgICAgICAgZ29QcmV2QnRuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fc2V0dGluZ3MuZ29QcmV2aW91cyk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0b3BCdG4gPSB0aGlzLl9jb21wb25lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbmV3YmllLXN0b3BdJyk7XG4gICAgICAgIGlmIChzdG9wQnRuKSB7XG4gICAgICAgICAgICBzdG9wQnRuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fc2V0dGluZ3Muc3RvcCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBWYW5pbGxhSGludDtcbn0oSGludF8xLkhpbnQpKTtcbmV4cG9ydHMuVmFuaWxsYUhpbnQgPSBWYW5pbGxhSGludDtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZ1ZUhpbnQgPSB2b2lkIDA7XG52YXIgQ2xhc3NOYW1lXzEgPSByZXF1aXJlKFwiLi4vLi4vQ2xhc3NOYW1lXCIpO1xudmFyIEhpbnRfMSA9IHJlcXVpcmUoXCIuL0hpbnRcIik7XG52YXIgVnVlSGludCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVnVlSGludCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBWdWVIaW50KGNvbmZpZywgc2V0dGluZ3MsIFZ1ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjb25maWcpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLl9WdWUgPSBWdWU7XG4gICAgICAgIF90aGlzLl92dWVDb21wb25lbnQgPSBjb25maWcuY29tcG9uZW50O1xuICAgICAgICBfdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBWdWVIaW50LnByb3RvdHlwZS5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fY29tcG9uZW50ID0gdGhpcy5fZ2V0SGludEhUTUxFbGVtZW50KCk7XG4gICAgfTtcbiAgICBWdWVIaW50LnByb3RvdHlwZS5fZ2V0SGludEhUTUxFbGVtZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29tcG9uZW50ID0gdGhpcy5fVnVlLmV4dGVuZCh0aGlzLl92dWVDb21wb25lbnQpO1xuICAgICAgICB2YXIgaGludCA9IG5ldyBjb21wb25lbnQoe1xuICAgICAgICAgICAgcHJvcHNEYXRhOiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgdGhpcy5fY29udGVudCksIHRoaXMuX3NldHRpbmdzKSxcbiAgICAgICAgfSkuJG1vdW50KCk7XG4gICAgICAgIGhpbnQuJG9uKCdnby1uZXh0JywgdGhpcy5fc2V0dGluZ3MuZ29OZXh0KTtcbiAgICAgICAgaGludC4kb24oJ2dvLXByZXZpb3VzJywgdGhpcy5fc2V0dGluZ3MuZ29QcmV2aW91cyk7XG4gICAgICAgIGhpbnQuJG9uKCdzdG9wJywgdGhpcy5fc2V0dGluZ3Muc3RvcCk7XG4gICAgICAgIHZhciBlbGVtID0gaGludC4kZWw7XG4gICAgICAgIGVsZW0uY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLkhJTlQpO1xuICAgICAgICByZXR1cm4gZWxlbTtcbiAgICB9O1xuICAgIHJldHVybiBWdWVIaW50O1xufShIaW50XzEuSGludCkpO1xuZXhwb3J0cy5WdWVIaW50ID0gVnVlSGludDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5OZXdiaWUgPSB2b2lkIDA7XG52YXIgQ29uZmlnXzEgPSByZXF1aXJlKFwiLi9Db25maWdcIik7XG52YXIgU3RlcF8xID0gcmVxdWlyZShcIi4vU3RlcFwiKTtcbnZhciBMaW5rZWRMaXN0XzEgPSByZXF1aXJlKFwiLi4vaGVscGVycy9MaW5rZWRMaXN0XCIpO1xudmFyIGdldENhbGxiYWNrXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvZ2V0Q2FsbGJhY2tcIik7XG52YXIgdGhyb3dfMSA9IHJlcXVpcmUoXCIuLi91dGlscy90aHJvd1wiKTtcbnZhciB3YXJuXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvd2FyblwiKTtcbnZhciBOZXdiaWUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTmV3YmllKGNvbmZpZykge1xuICAgICAgICB0aGlzLl9jdXJyZW50U3RlcCA9IG51bGw7XG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IG5ldyBDb25maWdfMS5Db25maWcoY29uZmlnKTtcbiAgICAgICAgdmFyIGVycm9yID0gdGhpcy5fY29uZmlnLnZhbGlkYXRlKCk7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgKDAsIHRocm93XzEuZGVmYXVsdCkoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NldFN0ZXBzKCk7XG4gICAgICAgIHRoaXMuX3NldExpZmVDeWNsZUhvb2tzKCk7XG4gICAgfVxuICAgIE5ld2JpZS5wcm90b3R5cGUuX2JlZm9yZVN0YXJ0ID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuX3N0YXJ0ZWQgPSBmdW5jdGlvbiAoKSB7IH07XG4gICAgTmV3YmllLnByb3RvdHlwZS5fYmVmb3JlRmluaXNoID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuX2ZpbmlzaGVkID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2JlZm9yZVN0YXJ0KCk7XG4gICAgICAgIHRoaXMuX2dvVG8odGhpcy5fc3RlcHMuZ2V0Rmlyc3QoKSk7XG4gICAgICAgIHRoaXMuX3N0YXJ0ZWQoKTtcbiAgICB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuZ29OZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX2N1cnJlbnRTdGVwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHRTdGVwID0gdGhpcy5fY3VycmVudFN0ZXAubmV4dDtcbiAgICAgICAgaWYgKCFuZXh0U3RlcCkge1xuICAgICAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZ29UbyhuZXh0U3RlcCk7XG4gICAgfTtcbiAgICBOZXdiaWUucHJvdG90eXBlLmdvUHJldmlvdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5fY3VycmVudFN0ZXApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJldmlvdXNTdGVwID0gdGhpcy5fY3VycmVudFN0ZXAucHJldmlvdXM7XG4gICAgICAgIGlmICghcHJldmlvdXNTdGVwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZ29UbyhwcmV2aW91c1N0ZXApO1xuICAgIH07XG4gICAgTmV3YmllLnByb3RvdHlwZS5nb1RvID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICAgIGlmICghdGhpcy5fY3VycmVudFN0ZXApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RlcCA9IHRoaXMuX3N0ZXBzLmdldEJ5SWQoaWQpO1xuICAgICAgICBpZiAoIXN0ZXApIHtcbiAgICAgICAgICAgICgwLCB3YXJuXzEuZGVmYXVsdCkoXCJTdGVwIFwiLmNvbmNhdChpZCwgXCIgbm90IGZvdW5kIVwiKSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZ29UbyhzdGVwKTtcbiAgICB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fYmVmb3JlRmluaXNoKCk7XG4gICAgICAgIGlmICh0aGlzLl9jdXJyZW50U3RlcCkge1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudFN0ZXAudmFsdWUudW5tb3VudCgpO1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudFN0ZXAgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2ZpbmlzaGVkKCk7XG4gICAgfTtcbiAgICBOZXdiaWUucHJvdG90eXBlLl9nb1RvID0gZnVuY3Rpb24gKHN0ZXApIHtcbiAgICAgICAgaWYgKHRoaXMuX2N1cnJlbnRTdGVwKSB7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50U3RlcC52YWx1ZS51bm1vdW50KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY3VycmVudFN0ZXAgPSBzdGVwO1xuICAgICAgICB0aGlzLl9jdXJyZW50U3RlcC52YWx1ZS5tb3VudCgpO1xuICAgIH07XG4gICAgTmV3YmllLnByb3RvdHlwZS5fc2V0U3RlcHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBjb25maWcgPSB0aGlzLl9jb25maWcuY29uZmlnO1xuICAgICAgICB2YXIgbGlzdCA9IG5ldyBMaW5rZWRMaXN0XzEuTGlua2VkTGlzdCgpO1xuICAgICAgICBjb25maWcuc3RlcHMuZm9yRWFjaChmdW5jdGlvbiAoc3RlcENvbmZpZywgaW5kZXgpIHtcbiAgICAgICAgICAgIHZhciBpZCA9IHN0ZXBDb25maWcuaWQgPyBTdHJpbmcoc3RlcENvbmZpZy5pZCkgOiBpbmRleDtcbiAgICAgICAgICAgIHZhciBzdGVwID0gbmV3IFN0ZXBfMS5TdGVwKF90aGlzLl9jb25maWcucmVzb2x2ZVN0ZXBDb25maWcoaWQpLCB7XG4gICAgICAgICAgICAgICAgZ29OZXh0OiBfdGhpcy5nb05leHQuYmluZChfdGhpcyksXG4gICAgICAgICAgICAgICAgZ29QcmV2aW91czogX3RoaXMuZ29QcmV2aW91cy5iaW5kKF90aGlzKSxcbiAgICAgICAgICAgICAgICBzdG9wOiBfdGhpcy5zdG9wLmJpbmQoX3RoaXMpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsaXN0LmFkZChzdGVwKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3N0ZXBzID0gbGlzdDtcbiAgICB9O1xuICAgIE5ld2JpZS5wcm90b3R5cGUuX3NldExpZmVDeWNsZUhvb2tzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29uZmlnID0gdGhpcy5fY29uZmlnLmNvbmZpZztcbiAgICAgICAgdGhpcy5fYmVmb3JlU3RhcnQgPSAoMCwgZ2V0Q2FsbGJhY2tfMS5kZWZhdWx0KShjb25maWcuYmVmb3JlU3RhcnQpO1xuICAgICAgICB0aGlzLl9zdGFydGVkID0gKDAsIGdldENhbGxiYWNrXzEuZGVmYXVsdCkoY29uZmlnLnN0YXJ0ZWQpO1xuICAgICAgICB0aGlzLl9iZWZvcmVGaW5pc2ggPSAoMCwgZ2V0Q2FsbGJhY2tfMS5kZWZhdWx0KShjb25maWcuYmVmb3JlRmluaXNoKTtcbiAgICAgICAgdGhpcy5fZmluaXNoZWQgPSAoMCwgZ2V0Q2FsbGJhY2tfMS5kZWZhdWx0KShjb25maWcuZmluaXNoZWQpO1xuICAgIH07XG4gICAgcmV0dXJuIE5ld2JpZTtcbn0oKSk7XG5leHBvcnRzLk5ld2JpZSA9IE5ld2JpZTtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTnVsbFNoYWRvdyA9IHZvaWQgMDtcbnZhciBTaGFkb3dfMSA9IHJlcXVpcmUoXCIuL1NoYWRvd1wiKTtcbnZhciBOdWxsU2hhZG93ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhOdWxsU2hhZG93LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE51bGxTaGFkb3coKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgIH1cbiAgICByZXR1cm4gTnVsbFNoYWRvdztcbn0oU2hhZG93XzEuU2hhZG93KSk7XG5leHBvcnRzLk51bGxTaGFkb3cgPSBOdWxsU2hhZG93O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNoYWRvdyA9IHZvaWQgMDtcbnZhciBTaGFkb3cgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2hhZG93KCkge1xuICAgIH1cbiAgICBTaGFkb3cucHJvdG90eXBlLm1vdW50ID0gZnVuY3Rpb24gKHRhcmdldEVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XG4gICAgICAgIGlmICh0aGlzLl9jb25maWcuZGlzYWJsZVNjcm9sbCkge1xuICAgICAgICAgICAgdGhpcy5fZGlzYWJsZVNjcm9sbCgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTaGFkb3cucHJvdG90eXBlLnVubW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLl9jb25maWcuZGlzYWJsZVNjcm9sbCkge1xuICAgICAgICAgICAgdGhpcy5fZW5hYmxlU2Nyb2xsKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNoYWRvdy5wcm90b3R5cGUuX2Rpc2FibGVTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2NvbmZpZy5yb290Q29tcG9uZW50LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgfTtcbiAgICBTaGFkb3cucHJvdG90eXBlLl9lbmFibGVTY3JvbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2NvbmZpZy5yb290Q29tcG9uZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdvdmVyZmxvdycpO1xuICAgIH07XG4gICAgcmV0dXJuIFNoYWRvdztcbn0oKSk7XG5leHBvcnRzLlNoYWRvdyA9IFNoYWRvdztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaGFkb3dGYWN0b3J5ID0gdm9pZCAwO1xudmFyIFN2Z1NoYWRvd18xID0gcmVxdWlyZShcIi4vU3ZnU2hhZG93XCIpO1xudmFyIE51bGxTaGFkb3dfMSA9IHJlcXVpcmUoXCIuL051bGxTaGFkb3dcIik7XG52YXIgU2hhZG93RmFjdG9yeSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTaGFkb3dGYWN0b3J5KCkge1xuICAgIH1cbiAgICBTaGFkb3dGYWN0b3J5LmNyZWF0ZSA9IGZ1bmN0aW9uIChjb25maWcsIHNldHRpbmdzKSB7XG4gICAgICAgIGlmIChjb25maWcuZW5hYmxlZCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9zdmdTaGFkb3cpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zdmdTaGFkb3cgPSBuZXcgU3ZnU2hhZG93XzEuU3ZnU2hhZG93KHNldHRpbmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdmdTaGFkb3c7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE51bGxTaGFkb3dfMS5OdWxsU2hhZG93KCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBTaGFkb3dGYWN0b3J5O1xufSgpKTtcbmV4cG9ydHMuU2hhZG93RmFjdG9yeSA9IFNoYWRvd0ZhY3Rvcnk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN2Z1NoYWRvdyA9IHZvaWQgMDtcbnZhciBTaGFkb3dfMSA9IHJlcXVpcmUoXCIuL1NoYWRvd1wiKTtcbnZhciBDbGFzc05hbWVfMSA9IHJlcXVpcmUoXCIuLi8uLi9DbGFzc05hbWVcIik7XG52YXIgZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXCIpO1xudmFyIGRlYm91bmNlXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZGVib3VuY2VcIik7XG52YXIgcHhfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9weFwiKTtcbnZhciBTdmdTaGFkb3cgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN2Z1NoYWRvdywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdmdTaGFkb3coX2EpIHtcbiAgICAgICAgdmFyIHRyYW5zaXRpb25EdXJhdGlvbiA9IF9hLnRyYW5zaXRpb25EdXJhdGlvbjtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuX3N2Z1Jvb3RJZCA9ICdzaGFkb3dfcm9vdCc7XG4gICAgICAgIF90aGlzLl9tYXNrSWQgPSAnc2hhZG93X21hc2snO1xuICAgICAgICBfdGhpcy5fYmxhY2tJZCA9ICdzaGFkb3dfbWFza19ibGFjayc7XG4gICAgICAgIF90aGlzLl9zaGFkb3dJZCA9ICdzaGFkb3cnO1xuICAgICAgICBfdGhpcy5feCA9IG51bGw7XG4gICAgICAgIF90aGlzLl95ID0gbnVsbDtcbiAgICAgICAgX3RoaXMuX3dpZHRoID0gbnVsbDtcbiAgICAgICAgX3RoaXMuX2hlaWdodCA9IG51bGw7XG4gICAgICAgIF90aGlzLl9yeCA9IG51bGw7XG4gICAgICAgIF90aGlzLl9yeSA9IG51bGw7XG4gICAgICAgIF90aGlzLl9jb2xvciA9IG51bGw7XG4gICAgICAgIF90aGlzLl90cmFuc2l0aW9uRHVyYXRpb24gPSB0cmFuc2l0aW9uRHVyYXRpb24gfHwgMTtcbiAgICAgICAgX3RoaXMuX2NyZWF0ZUVsZW1lbnRzKCk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU3ZnU2hhZG93LnByb3RvdHlwZS5tb3VudCA9IGZ1bmN0aW9uICh0YXJnZXRFbGVtZW50LCBjb25maWcpIHtcbiAgICAgICAgdGhpcy5fdGFyZ2V0RWxlbWVudCA9IHRhcmdldEVsZW1lbnQ7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUubW91bnQuY2FsbCh0aGlzLCB0YXJnZXRFbGVtZW50LCBjb25maWcpO1xuICAgICAgICB0aGlzLl91cGRhdGUoKTtcbiAgICAgICAgdGhpcy5fc2hvdygpO1xuICAgICAgICB0aGlzLl9yZXNpemVDYWxsYmFjayA9ICgwLCBkZWJvdW5jZV8xLmRlZmF1bHQpKHRoaXMuX3VwZGF0ZSkuYmluZCh0aGlzKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuX3Jlc2l6ZUNhbGxiYWNrKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUudW5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS51bm1vdW50LmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuX2hpZGUoKTtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuX3Jlc2l6ZUNhbGxiYWNrKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX2NyZWF0ZUVsZW1lbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9jcmVhdGVTdmdFbGVtZW50cygpO1xuICAgICAgICB0aGlzLl9jcmVhdGVPdmVybGF5RWxlbWVudHMoKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX3VwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fdXBkYXRlU3ZnKCk7XG4gICAgICAgIHRoaXMuX3VwZGF0ZU92ZXJsYXkoKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX3Nob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3Nob3dTdmcoKTtcbiAgICAgICAgdGhpcy5fc2hvd092ZXJsYXkoKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX2hpZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2hpZGVTdmcoKTtcbiAgICAgICAgdGhpcy5faGlkZU92ZXJsYXkoKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX2NyZWF0ZVN2Z0VsZW1lbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgYmxvY2suY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPVyk7XG4gICAgICAgIHZhciBzdmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdmcnKTtcbiAgICAgICAgc3ZnLmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lXzEuQ2xhc3NOYW1lcy5TSEFET1dfU1ZHKTtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZSgnaWQnLCB0aGlzLl9zdmdSb290SWQpO1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxMDAlJyk7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxMDAlJyk7XG4gICAgICAgIHZhciBzaGFkb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdyZWN0Jyk7XG4gICAgICAgIHNoYWRvdy5zZXRBdHRyaWJ1dGUoJ2lkJywgdGhpcy5fc2hhZG93SWQpO1xuICAgICAgICBzaGFkb3cuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxMDAlJyk7XG4gICAgICAgIHNoYWRvdy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxMDAlJyk7XG4gICAgICAgIHNoYWRvdy5zZXRBdHRyaWJ1dGUoJ21hc2snLCBcInVybCgjXCIuY29uY2F0KHRoaXMuX21hc2tJZCwgXCIpXCIpKTtcbiAgICAgICAgdmFyIGRlZnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkZWZzJyk7XG4gICAgICAgIHZhciBtYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWFzaycpO1xuICAgICAgICBtYXNrLnNldEF0dHJpYnV0ZSgnaWQnLCB0aGlzLl9tYXNrSWQpO1xuICAgICAgICB2YXIgd2hpdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdyZWN0Jyk7XG4gICAgICAgIHdoaXRlLnNldEF0dHJpYnV0ZSgneCcsICcwJyk7XG4gICAgICAgIHdoaXRlLnNldEF0dHJpYnV0ZSgneScsICcwJyk7XG4gICAgICAgIHdoaXRlLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCAnMTAwJScpO1xuICAgICAgICB3aGl0ZS5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxMDAlJyk7XG4gICAgICAgIHdoaXRlLnNldEF0dHJpYnV0ZSgnZmlsbCcsICcjZmZmZmZmJyk7XG4gICAgICAgIHZhciBibGFjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3JlY3QnKTtcbiAgICAgICAgYmxhY2suc2V0QXR0cmlidXRlKCdpZCcsIHRoaXMuX2JsYWNrSWQpO1xuICAgICAgICBibGFjay5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnIzAwMDAwMCcpO1xuICAgICAgICBibG9jay5hcHBlbmQoc3ZnKTtcbiAgICAgICAgc3ZnLmFwcGVuZChzaGFkb3csIGRlZnMpO1xuICAgICAgICBkZWZzLmFwcGVuZChtYXNrKTtcbiAgICAgICAgbWFzay5hcHBlbmQod2hpdGUsIGJsYWNrKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmQoYmxvY2spO1xuICAgICAgICB0aGlzLl9zdmdSb290ID0gc3ZnO1xuICAgICAgICB0aGlzLl9ibG9jayA9IGJsb2NrO1xuICAgIH07XG4gICAgU3ZnU2hhZG93LnByb3RvdHlwZS5fY3JlYXRlT3ZlcmxheUVsZW1lbnRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdG9wQmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdmFyIHJpZ2h0QmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdmFyIGJvdHRvbUJsb2NrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHZhciBsZWZ0QmxvY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdG9wQmxvY2suY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZLCBDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZX1RPUCk7XG4gICAgICAgIHJpZ2h0QmxvY2suY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZLCBDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZX1JJR0hUKTtcbiAgICAgICAgYm90dG9tQmxvY2suY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZLCBDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19PVkVSTEFZX0JPVFRPTSk7XG4gICAgICAgIGxlZnRCbG9jay5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuU0hBRE9XX09WRVJMQVksIENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuU0hBRE9XX09WRVJMQVlfTEVGVCk7XG4gICAgICAgIHRoaXMuX2Jsb2NrLmFwcGVuZCh0b3BCbG9jaywgcmlnaHRCbG9jaywgYm90dG9tQmxvY2ssIGxlZnRCbG9jayk7XG4gICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1QgPSB0b3BCbG9jaztcbiAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrUiA9IHJpZ2h0QmxvY2s7XG4gICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja0IgPSBib3R0b21CbG9jaztcbiAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrTCA9IGxlZnRCbG9jaztcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX3VwZGF0ZVN2ZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNvbG9yID0gdGhpcy5fY29uZmlnLmNvbG9yO1xuICAgICAgICB2YXIgeCA9IFN0cmluZyh3aW5kb3cuaW5uZXJXaWR0aCAvIDIpO1xuICAgICAgICB2YXIgeSA9IFN0cmluZyh3aW5kb3cuaW5uZXJIZWlnaHQgLyAyKTtcbiAgICAgICAgdmFyIHdpZHRoID0gU3RyaW5nKDApO1xuICAgICAgICB2YXIgaGVpZ2h0ID0gU3RyaW5nKDApO1xuICAgICAgICB2YXIgcnggPSBTdHJpbmcoMCk7XG4gICAgICAgIHZhciByeSA9IFN0cmluZygwKTtcbiAgICAgICAgaWYgKHRoaXMuX3RhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXRSZWN0ID0gdGhpcy5fdGFyZ2V0RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHggPSBTdHJpbmcodGFyZ2V0UmVjdC5sZWZ0IC0gdGhpcy5fY29uZmlnLm9mZnNldCk7XG4gICAgICAgICAgICB5ID0gU3RyaW5nKHRhcmdldFJlY3QudG9wIC0gdGhpcy5fY29uZmlnLm9mZnNldCk7XG4gICAgICAgICAgICB3aWR0aCA9IFN0cmluZyh0YXJnZXRSZWN0LndpZHRoICsgMiAqIHRoaXMuX2NvbmZpZy5vZmZzZXQpO1xuICAgICAgICAgICAgaGVpZ2h0ID0gU3RyaW5nKHRhcmdldFJlY3QuaGVpZ2h0ICsgMiAqIHRoaXMuX2NvbmZpZy5vZmZzZXQpO1xuICAgICAgICAgICAgcnggPSBTdHJpbmcodGhpcy5fY29uZmlnLmJvcmRlclJhZGl1cyk7XG4gICAgICAgICAgICByeSA9IFN0cmluZyh0aGlzLl9jb25maWcuYm9yZGVyUmFkaXVzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZXNldEFuaW1hdGlvbnMoKTtcbiAgICAgICAgdGhpcy5fc3ZnUm9vdC5hcHBlbmQodGhpcy5fY3JlYXRlQW5pbWF0aW9uKHtcbiAgICAgICAgICAgIHRhcmdldElkOiBcIiNcIi5jb25jYXQodGhpcy5fc2hhZG93SWQpLFxuICAgICAgICAgICAgYXR0cmlidXRlOiAnZmlsbCcsXG4gICAgICAgICAgICBmcm9tOiB0aGlzLl9jb2xvciA9PT0gbnVsbCA/IGNvbG9yIDogdGhpcy5fY29sb3IsXG4gICAgICAgICAgICB0bzogY29sb3IsXG4gICAgICAgICAgICBkdXJhdGlvbjogKDAsIGdldFRyYW5zaXRpb25EdXJhdGlvbl8xLmRlZmF1bHQpKHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiksXG4gICAgICAgIH0pLCB0aGlzLl9jcmVhdGVBbmltYXRpb24oe1xuICAgICAgICAgICAgdGFyZ2V0SWQ6IFwiI1wiLmNvbmNhdCh0aGlzLl9ibGFja0lkKSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZTogJ3gnLFxuICAgICAgICAgICAgZnJvbTogdGhpcy5feCA9PT0gbnVsbCA/IHggOiB0aGlzLl94LFxuICAgICAgICAgICAgdG86IHgsXG4gICAgICAgICAgICBkdXJhdGlvbjogKDAsIGdldFRyYW5zaXRpb25EdXJhdGlvbl8xLmRlZmF1bHQpKHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiksXG4gICAgICAgIH0pLCB0aGlzLl9jcmVhdGVBbmltYXRpb24oe1xuICAgICAgICAgICAgdGFyZ2V0SWQ6IFwiI1wiLmNvbmNhdCh0aGlzLl9ibGFja0lkKSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZTogJ3knLFxuICAgICAgICAgICAgZnJvbTogdGhpcy5feSA9PT0gbnVsbCA/IHkgOiB0aGlzLl95LFxuICAgICAgICAgICAgdG86IHksXG4gICAgICAgICAgICBkdXJhdGlvbjogKDAsIGdldFRyYW5zaXRpb25EdXJhdGlvbl8xLmRlZmF1bHQpKHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiksXG4gICAgICAgIH0pLCB0aGlzLl9jcmVhdGVBbmltYXRpb24oe1xuICAgICAgICAgICAgdGFyZ2V0SWQ6IFwiI1wiLmNvbmNhdCh0aGlzLl9ibGFja0lkKSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZTogJ3dpZHRoJyxcbiAgICAgICAgICAgIGZyb206IHRoaXMuX3dpZHRoID09PSBudWxsID8gd2lkdGggOiB0aGlzLl93aWR0aCxcbiAgICAgICAgICAgIHRvOiB3aWR0aCxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAoMCwgZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXzEuZGVmYXVsdCkodGhpcy5fdHJhbnNpdGlvbkR1cmF0aW9uKSxcbiAgICAgICAgfSksIHRoaXMuX2NyZWF0ZUFuaW1hdGlvbih7XG4gICAgICAgICAgICB0YXJnZXRJZDogXCIjXCIuY29uY2F0KHRoaXMuX2JsYWNrSWQpLFxuICAgICAgICAgICAgYXR0cmlidXRlOiAnaGVpZ2h0JyxcbiAgICAgICAgICAgIGZyb206IHRoaXMuX2hlaWdodCA9PT0gbnVsbCA/IGhlaWdodCA6IHRoaXMuX2hlaWdodCxcbiAgICAgICAgICAgIHRvOiBoZWlnaHQsXG4gICAgICAgICAgICBkdXJhdGlvbjogKDAsIGdldFRyYW5zaXRpb25EdXJhdGlvbl8xLmRlZmF1bHQpKHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiksXG4gICAgICAgIH0pLCB0aGlzLl9jcmVhdGVBbmltYXRpb24oe1xuICAgICAgICAgICAgdGFyZ2V0SWQ6IFwiI1wiLmNvbmNhdCh0aGlzLl9ibGFja0lkKSxcbiAgICAgICAgICAgIGF0dHJpYnV0ZTogJ3J4JyxcbiAgICAgICAgICAgIGZyb206IHRoaXMuX3J4ID09PSBudWxsID8gcnggOiB0aGlzLl9yeCxcbiAgICAgICAgICAgIHRvOiByeCxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAoMCwgZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXzEuZGVmYXVsdCkodGhpcy5fdHJhbnNpdGlvbkR1cmF0aW9uKSxcbiAgICAgICAgfSksIHRoaXMuX2NyZWF0ZUFuaW1hdGlvbih7XG4gICAgICAgICAgICB0YXJnZXRJZDogXCIjXCIuY29uY2F0KHRoaXMuX2JsYWNrSWQpLFxuICAgICAgICAgICAgYXR0cmlidXRlOiAncnknLFxuICAgICAgICAgICAgZnJvbTogdGhpcy5fcnkgPT09IG51bGwgPyByeSA6IHRoaXMuX3J5LFxuICAgICAgICAgICAgdG86IHJ5LFxuICAgICAgICAgICAgZHVyYXRpb246ICgwLCBnZXRUcmFuc2l0aW9uRHVyYXRpb25fMS5kZWZhdWx0KSh0aGlzLl90cmFuc2l0aW9uRHVyYXRpb24pLFxuICAgICAgICB9KSk7XG4gICAgICAgIHRoaXMuX3ggPSB4O1xuICAgICAgICB0aGlzLl95ID0geTtcbiAgICAgICAgdGhpcy5fd2lkdGggPSB3aWR0aDtcbiAgICAgICAgdGhpcy5faGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLl9yeCA9IHJ4O1xuICAgICAgICB0aGlzLl9yeSA9IHJ5O1xuICAgICAgICB0aGlzLl9jb2xvciA9IGNvbG9yO1xuICAgICAgICB0aGlzLl9zdmdSb290Lm91dGVySFRNTCArPSAnJztcbiAgICAgICAgdGhpcy5fc3ZnUm9vdCA9IHRoaXMuX2Jsb2NrLnF1ZXJ5U2VsZWN0b3IoXCIjXCIuY29uY2F0KHRoaXMuX3N2Z1Jvb3RJZCkpO1xuICAgIH07XG4gICAgU3ZnU2hhZG93LnByb3RvdHlwZS5fdXBkYXRlT3ZlcmxheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3RhcmdldEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXRSZWN0ID0gdGhpcy5fdGFyZ2V0RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1Quc3R5bGUuaGVpZ2h0ID0gKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC50b3ApO1xuICAgICAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrUi5zdHlsZS50b3AgPSAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LnRvcCk7XG4gICAgICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tSLnN0eWxlLmxlZnQgPSAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmxlZnQgKyB0YXJnZXRSZWN0LndpZHRoKTtcbiAgICAgICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1Iuc3R5bGUud2lkdGggPSAoMCwgcHhfMS5kZWZhdWx0KSh3aW5kb3cuaW5uZXJXaWR0aCAtICh0YXJnZXRSZWN0LmxlZnQgKyB0YXJnZXRSZWN0LndpZHRoKSk7XG4gICAgICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tSLnN0eWxlLmhlaWdodCA9ICgwLCBweF8xLmRlZmF1bHQpKHRhcmdldFJlY3QuaGVpZ2h0KTtcbiAgICAgICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja0Iuc3R5bGUudG9wID0gKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC50b3AgKyB0YXJnZXRSZWN0LmhlaWdodCk7XG4gICAgICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tCLnN0eWxlLmhlaWdodCA9ICgwLCBweF8xLmRlZmF1bHQpKHdpbmRvdy5pbm5lckhlaWdodCAtICh0YXJnZXRSZWN0LnRvcCArIHRhcmdldFJlY3QuaGVpZ2h0KSk7XG4gICAgICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tMLnN0eWxlLnRvcCA9ICgwLCBweF8xLmRlZmF1bHQpKHRhcmdldFJlY3QudG9wKTtcbiAgICAgICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja0wuc3R5bGUud2lkdGggPSAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmxlZnQpO1xuICAgICAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrTC5zdHlsZS5oZWlnaHQgPSAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmhlaWdodCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tULnN0eWxlLndpZHRoID0gJzEwMHZ3JztcbiAgICAgICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1Quc3R5bGUuaGVpZ2h0ID0gJzEwMHZoJztcbiAgICAgICAgfVxuICAgIH07XG4gICAgU3ZnU2hhZG93LnByb3RvdHlwZS5fc2hvd1N2ZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fYmxvY2suY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19WSVNJQkxFKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX3Nob3dPdmVybGF5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tULmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lXzEuQ2xhc3NOYW1lcy5TSEFET1dfVklTSUJMRSk7XG4gICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1IuY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19WSVNJQkxFKTtcbiAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrQi5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuU0hBRE9XX1ZJU0lCTEUpO1xuICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tMLmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lXzEuQ2xhc3NOYW1lcy5TSEFET1dfVklTSUJMRSk7XG4gICAgfTtcbiAgICBTdmdTaGFkb3cucHJvdG90eXBlLl9oaWRlU3ZnID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9ibG9jay5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuU0hBRE9XX1ZJU0lCTEUpO1xuICAgIH07XG4gICAgU3ZnU2hhZG93LnByb3RvdHlwZS5faGlkZU92ZXJsYXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja1QuY2xhc3NMaXN0LnJlbW92ZShDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19WSVNJQkxFKTtcbiAgICAgICAgdGhpcy5fb3ZlcmxheUJsb2NrUi5jbGFzc0xpc3QucmVtb3ZlKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuU0hBRE9XX1ZJU0lCTEUpO1xuICAgICAgICB0aGlzLl9vdmVybGF5QmxvY2tCLmNsYXNzTGlzdC5yZW1vdmUoQ2xhc3NOYW1lXzEuQ2xhc3NOYW1lcy5TSEFET1dfVklTSUJMRSk7XG4gICAgICAgIHRoaXMuX292ZXJsYXlCbG9ja0wuY2xhc3NMaXN0LnJlbW92ZShDbGFzc05hbWVfMS5DbGFzc05hbWVzLlNIQURPV19WSVNJQkxFKTtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX2NyZWF0ZUFuaW1hdGlvbiA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgdGFyZ2V0SWQgPSBfYS50YXJnZXRJZCwgYXR0cmlidXRlID0gX2EuYXR0cmlidXRlLCBmcm9tID0gX2EuZnJvbSwgdG8gPSBfYS50bywgZHVyYXRpb24gPSBfYS5kdXJhdGlvbjtcbiAgICAgICAgdmFyIGFuaW1hdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2FuaW1hdGUnKTtcbiAgICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZSgneGxpbms6aHJlZicsIHRhcmdldElkKTtcbiAgICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZSgnYXR0cmlidXRlTmFtZScsIGF0dHJpYnV0ZSk7XG4gICAgICAgIGFuaW1hdGlvbi5zZXRBdHRyaWJ1dGUoJ2Zyb20nLCBmcm9tKTtcbiAgICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZSgndG8nLCB0byk7XG4gICAgICAgIGFuaW1hdGlvbi5zZXRBdHRyaWJ1dGUoJ2R1cicsIGR1cmF0aW9uKTtcbiAgICAgICAgYW5pbWF0aW9uLnNldEF0dHJpYnV0ZSgnZmlsbCcsICdmcmVlemUnKTtcbiAgICAgICAgcmV0dXJuIGFuaW1hdGlvbjtcbiAgICB9O1xuICAgIFN2Z1NoYWRvdy5wcm90b3R5cGUuX3Jlc2V0QW5pbWF0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgQXJyYXkuZnJvbSh0aGlzLl9zdmdSb290LnF1ZXJ5U2VsZWN0b3JBbGwoJ2FuaW1hdGUnKSkuZm9yRWFjaChmdW5jdGlvbiAoZWxlbSkge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW0ucmVtb3ZlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFN2Z1NoYWRvdztcbn0oU2hhZG93XzEuU2hhZG93KSk7XG5leHBvcnRzLlN2Z1NoYWRvdyA9IFN2Z1NoYWRvdztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdGVwID0gdm9pZCAwO1xudmFyIGdldENhbGxiYWNrXzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvZ2V0Q2FsbGJhY2tcIik7XG52YXIgR2xvYmFsc18xID0gcmVxdWlyZShcIi4vR2xvYmFsc1wiKTtcbnZhciBTdGVwID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0ZXAoY29uZmlnLCBzdGVwUGFyYW1zKSB7XG4gICAgICAgIHRoaXMuX2lkID0gY29uZmlnLmlkO1xuICAgICAgICB0aGlzLl90YXJnZXQgPSBjb25maWcudGFyZ2V0O1xuICAgICAgICB0aGlzLl9wb3NpdGlvbiA9IGNvbmZpZy5wb3NpdGlvbjtcbiAgICAgICAgdGhpcy5fb2Zmc2V0WCA9IGNvbmZpZy5vZmZzZXRYO1xuICAgICAgICB0aGlzLl9vZmZzZXRZID0gY29uZmlnLm9mZnNldFk7XG4gICAgICAgIHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiA9IGNvbmZpZy50cmFuc2l0aW9uRHVyYXRpb247XG4gICAgICAgIHRoaXMuX3NoYWRvd0NvbmZpZyA9IGNvbmZpZy5zaGFkb3c7XG4gICAgICAgIHRoaXMuX2hpbnRDb25maWcgPSBjb25maWcuaGludDtcbiAgICAgICAgdGhpcy5fY29udGVudENvbmZpZyA9IGNvbmZpZy5jb250ZW50O1xuICAgICAgICB0aGlzLl9hcnJvd0NvbmZpZyA9IGNvbmZpZy5hcnJvdztcbiAgICAgICAgdGhpcy5fc3RlcFBhcmFtcyA9IHN0ZXBQYXJhbXM7XG4gICAgICAgIHRoaXMuX2NyZWF0ZVN0ZXBDb250YWluZXIoKTtcbiAgICAgICAgdGhpcy5fY3JlYXRlU2hhZG93KCk7XG4gICAgICAgIHRoaXMuX2NyZWF0ZUhpbnQoKTtcbiAgICAgICAgdGhpcy5fY3JlYXRlQXJyb3coKTtcbiAgICAgICAgdGhpcy5fc2V0TGlmZUN5Y2xlSG9va3MoY29uZmlnKTtcbiAgICB9XG4gICAgU3RlcC5wcm90b3R5cGUuX2JlZm9yZU1vdW50ID0gZnVuY3Rpb24gKCkgeyB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl9tb3VudGVkID0gZnVuY3Rpb24gKHRhcmdldEVsZW1lbnQpIHsgfTtcbiAgICBTdGVwLnByb3RvdHlwZS5fYmVmb3JlVW5tb3VudCA9IGZ1bmN0aW9uICh0YXJnZXRFbGVtZW50KSB7IH07XG4gICAgU3RlcC5wcm90b3R5cGUuX3VubW91bnRlZCA9IGZ1bmN0aW9uICgpIHsgfTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3RlcC5wcm90b3R5cGUsIFwiaWRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFN0ZXAucHJvdG90eXBlLm1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9iZWZvcmVNb3VudCgpO1xuICAgICAgICB0aGlzLl9zZXRUYXJnZXRFbGVtZW50KCk7XG4gICAgICAgIHRoaXMuX3Njcm9sbFRvVGFyZ2V0KCk7XG4gICAgICAgIHRoaXMuX21vdW50U3RlcENvbnRhaW5lcigpO1xuICAgICAgICB0aGlzLl9tb3VudFNoYWRvdygpO1xuICAgICAgICB0aGlzLl9tb3VudEhpbnQoKTtcbiAgICAgICAgdGhpcy5fbW91bnRBcnJvdygpO1xuICAgICAgICB0aGlzLl9tb3VudGVkKHRoaXMuX3RhcmdldEVsZW1lbnQpO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUudW5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fYmVmb3JlVW5tb3VudCh0aGlzLl90YXJnZXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdW5tb3VudEFycm93KCk7XG4gICAgICAgIHRoaXMuX3VubW91bnRIaW50KCk7XG4gICAgICAgIHRoaXMuX3VubW91bnRTaGFkb3coKTtcbiAgICAgICAgdGhpcy5fdW5tb3VudFN0ZXBDb250YWluZXIoKTtcbiAgICAgICAgdGhpcy5fdW5tb3VudGVkKCk7XG4gICAgfTtcbiAgICBTdGVwLnByb3RvdHlwZS5fY3JlYXRlU3RlcENvbnRhaW5lciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fc3RlcENvbnRhaW5lciA9IEdsb2JhbHNfMS5HbG9iYWxzLmNvbXBvbmVudHNGYWN0b3J5LmNyZWF0ZVN0ZXBDb250YWluZXIoe1xuICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiB0aGlzLl90cmFuc2l0aW9uRHVyYXRpb24sXG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX2NyZWF0ZVNoYWRvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fc2hhZG93ID0gR2xvYmFsc18xLkdsb2JhbHMuY29tcG9uZW50c0ZhY3RvcnkuY3JlYXRlU2hhZG93KHRoaXMuX3NoYWRvd0NvbmZpZywgeyB0cmFuc2l0aW9uRHVyYXRpb246IHRoaXMuX3RyYW5zaXRpb25EdXJhdGlvbiB9KTtcbiAgICB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl9jcmVhdGVIaW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9oaW50ID0gR2xvYmFsc18xLkdsb2JhbHMuY29tcG9uZW50c0ZhY3RvcnkuY3JlYXRlSGludCh0aGlzLl9oaW50Q29uZmlnLCB0aGlzLl9zdGVwUGFyYW1zKTtcbiAgICAgICAgdGhpcy5faGludC5zZXRDb250ZW50KHRoaXMuX2NvbnRlbnRDb25maWcpO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX2NyZWF0ZUFycm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9hcnJvdyA9IEdsb2JhbHNfMS5HbG9iYWxzLmNvbXBvbmVudHNGYWN0b3J5LmNyZWF0ZUFycm93KHRoaXMuX2Fycm93Q29uZmlnKTtcbiAgICB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl9zZXRMaWZlQ3ljbGVIb29rcyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgdGhpcy5fYmVmb3JlTW91bnQgPSAoMCwgZ2V0Q2FsbGJhY2tfMS5kZWZhdWx0KShjb25maWcuYmVmb3JlTW91bnQpO1xuICAgICAgICB0aGlzLl9tb3VudGVkID0gKDAsIGdldENhbGxiYWNrXzEuZGVmYXVsdCkoY29uZmlnLm1vdW50ZWQpO1xuICAgICAgICB0aGlzLl9iZWZvcmVVbm1vdW50ID0gKDAsIGdldENhbGxiYWNrXzEuZGVmYXVsdCkoY29uZmlnLmJlZm9yZVVubW91bnQpO1xuICAgICAgICB0aGlzLl91bm1vdW50ZWQgPSAoMCwgZ2V0Q2FsbGJhY2tfMS5kZWZhdWx0KShjb25maWcudW5tb3VudGVkKTtcbiAgICB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl9zZXRUYXJnZXRFbGVtZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl90YXJnZXRFbGVtZW50ID1cbiAgICAgICAgICAgIHR5cGVvZiB0aGlzLl90YXJnZXQgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICAgICAgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RhcmdldClcbiAgICAgICAgICAgICAgICA6IHRoaXMuX3RhcmdldDtcbiAgICB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl9zY3JvbGxUb1RhcmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl90YXJnZXRFbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRhcmdldFJlY3QgPSB0aGlzLl90YXJnZXRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICB2YXIgYmVhdXRpZnlpbmdGYWN0b3IgPSAwLjg7XG4gICAgICAgIHZhciBvZmZzZXRUb3AgPSAwO1xuICAgICAgICBpZiAod2luZG93LmlubmVySGVpZ2h0ID4gdGFyZ2V0UmVjdC5oZWlnaHQpIHtcbiAgICAgICAgICAgIG9mZnNldFRvcCA9XG4gICAgICAgICAgICAgICAgKCh3aW5kb3cuaW5uZXJIZWlnaHQgLSB0YXJnZXRSZWN0LmhlaWdodCkgLyAyKSAqXG4gICAgICAgICAgICAgICAgICAgIGJlYXV0aWZ5aW5nRmFjdG9yO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b3AgPSBNYXRoLm1pbihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LCBNYXRoLm1heCgwLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICsgdGFyZ2V0UmVjdC50b3AgLSBvZmZzZXRUb3ApKTtcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiB0b3AgfSk7XG4gICAgfTtcbiAgICBTdGVwLnByb3RvdHlwZS5fbW91bnRTdGVwQ29udGFpbmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9zdGVwQ29udGFpbmVyLm1vdW50KHtcbiAgICAgICAgICAgIHRhcmdldEVsZW1lbnQ6IHRoaXMuX3RhcmdldEVsZW1lbnQsXG4gICAgICAgICAgICBwb3NpdGlvbjogdGhpcy5fcG9zaXRpb24sXG4gICAgICAgICAgICBvZmZzZXRYOiB0aGlzLl9vZmZzZXRYLFxuICAgICAgICAgICAgb2Zmc2V0WTogdGhpcy5fb2Zmc2V0WSxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTdGVwLnByb3RvdHlwZS5fdW5tb3VudFN0ZXBDb250YWluZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX3N0ZXBDb250YWluZXIudW5tb3VudCgpO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX21vdW50U2hhZG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9zaGFkb3cubW91bnQodGhpcy5fdGFyZ2V0RWxlbWVudCwgdGhpcy5fc2hhZG93Q29uZmlnKTtcbiAgICB9O1xuICAgIFN0ZXAucHJvdG90eXBlLl91bm1vdW50U2hhZG93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9zaGFkb3cudW5tb3VudCgpO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX21vdW50SGludCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5faGludC5tb3VudCgpO1xuICAgICAgICBpZiAoIXRoaXMuX2hpbnQuZWxlbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3N0ZXBDb250YWluZXIuYXBwZW5kKHRoaXMuX2hpbnQuZWxlbSk7XG4gICAgfTtcbiAgICBTdGVwLnByb3RvdHlwZS5fdW5tb3VudEhpbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2hpbnQudW5tb3VudCgpO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX21vdW50QXJyb3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5fdGFyZ2V0RWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBoaW50UmVjdCA9IHRoaXMuX2hpbnQuZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgdGhpcy5fYXJyb3cubW91bnQodGhpcy5fYXJyb3dDb25maWcsIHtcbiAgICAgICAgICAgIGhpbnRSZWN0OiBoaW50UmVjdCxcbiAgICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLl9wb3NpdGlvbixcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdGhpcy5fYXJyb3cuZWxlbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3N0ZXBDb250YWluZXIuYXBwZW5kKHRoaXMuX2Fycm93LmVsZW0pO1xuICAgIH07XG4gICAgU3RlcC5wcm90b3R5cGUuX3VubW91bnRBcnJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fYXJyb3cudW5tb3VudCgpO1xuICAgIH07XG4gICAgcmV0dXJuIFN0ZXA7XG59KCkpO1xuZXhwb3J0cy5TdGVwID0gU3RlcDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdGVwQ29udGFpbmVyID0gdm9pZCAwO1xudmFyIENsYXNzTmFtZV8xID0gcmVxdWlyZShcIi4uLy4uL0NsYXNzTmFtZVwiKTtcbnZhciBQb3NpdGlvbl8xID0gcmVxdWlyZShcIi4uLy4uL1Bvc2l0aW9uXCIpO1xudmFyIGRlYm91bmNlXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZGVib3VuY2VcIik7XG52YXIgZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZ2V0VHJhbnNpdGlvbkR1cmF0aW9uXCIpO1xudmFyIHB4XzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvcHhcIik7XG52YXIgc2V0UG9zaXRpb25fMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9zZXRQb3NpdGlvblwiKTtcbnZhciBTdGVwQ29udGFpbmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0ZXBDb250YWluZXIoc2V0dGluZ3MpIHtcbiAgICAgICAgdGhpcy5fY3JlYXRlQ29tcG9uZW50cyhzZXR0aW5ncyk7XG4gICAgICAgIHRoaXMuX3Jlc2l6ZUNhbGxiYWNrID0gKDAsIGRlYm91bmNlXzEuZGVmYXVsdCkodGhpcy5fdXBkYXRlUG9zaXRpb24uYmluZCh0aGlzKSkuYmluZCh0aGlzKTtcbiAgICB9XG4gICAgU3RlcENvbnRhaW5lci5wcm90b3R5cGUubW91bnQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKHRoaXMuX2NvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuX3RhcmdldEVsZW1lbnQgPSBjb25maWcudGFyZ2V0RWxlbWVudDtcbiAgICAgICAgdGhpcy5fcG9zaXRpb24gPSBjb25maWcucG9zaXRpb247XG4gICAgICAgIHRoaXMuX29mZnNldFggPSBjb25maWcub2Zmc2V0WDtcbiAgICAgICAgdGhpcy5fb2Zmc2V0WSA9IGNvbmZpZy5vZmZzZXRZO1xuICAgICAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fcmVzaXplQ2FsbGJhY2spO1xuICAgIH07XG4gICAgU3RlcENvbnRhaW5lci5wcm90b3R5cGUudW5tb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnJlbW92ZSgpO1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fcmVzaXplQ2FsbGJhY2spO1xuICAgIH07XG4gICAgU3RlcENvbnRhaW5lci5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoQ2xhc3NOYW1lXzEuQ2xhc3NOYW1lcy5ISU5UX1dSQVBfVklTSUJMRSk7XG4gICAgfTtcbiAgICBTdGVwQ29udGFpbmVyLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9jb250YWluZXIuY2xhc3NMaXN0LmFkZChDbGFzc05hbWVfMS5DbGFzc05hbWVzLkhJTlRfV1JBUF9WSVNJQkxFKTtcbiAgICB9O1xuICAgIFN0ZXBDb250YWluZXIucHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgIGlmICghZWxlbSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Nsb3QuYXBwZW5kKGVsZW0pO1xuICAgIH07XG4gICAgU3RlcENvbnRhaW5lci5wcm90b3R5cGUuX2NyZWF0ZUNvbXBvbmVudHMgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgdmFyIHdyYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgd3JhcC5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuSElOVF9XUkFQKTtcbiAgICAgICAgd3JhcC5zdHlsZS50cmFuc2l0aW9uID0gXCJhbGwgXCIuY29uY2F0KCgwLCBnZXRUcmFuc2l0aW9uRHVyYXRpb25fMS5kZWZhdWx0KShzZXR0aW5ncy50cmFuc2l0aW9uRHVyYXRpb24pLCBcIiBsaW5lYXJcIik7XG4gICAgICAgIHZhciBpbm5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBpbm5lci5jbGFzc0xpc3QuYWRkKENsYXNzTmFtZV8xLkNsYXNzTmFtZXMuSElOVF9XUkFQX0lOTkVSKTtcbiAgICAgICAgd3JhcC5hcHBlbmQoaW5uZXIpO1xuICAgICAgICB0aGlzLl9jb250YWluZXIgPSB3cmFwO1xuICAgICAgICB0aGlzLl9zbG90ID0gaW5uZXI7XG4gICAgfTtcbiAgICBTdGVwQ29udGFpbmVyLnByb3RvdHlwZS5fdXBkYXRlUG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5fdGFyZ2V0RWxlbWVudCkge1xuICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJztcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2NlbnRlcic7XG4gICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnY2VudGVyJztcbiAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX2NvbnRhaW5lciwge1xuICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkod2luZG93LmlubmVySGVpZ2h0IC8gMiksXG4gICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkod2luZG93LmlubmVyV2lkdGggLyAyKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fc2xvdCwge30pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0YXJnZXRSZWN0ID0gdGhpcy5fdGFyZ2V0RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgc3dpdGNoICh0aGlzLl9wb3NpdGlvbikge1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLlRvcDpcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAnY2VudGVyJztcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnY2VudGVyJztcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb250YWluZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFJlY3QudG9wIC1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX29mZnNldFkpLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmxlZnQgKyB0YXJnZXRSZWN0LndpZHRoIC8gMiksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fc2xvdCwge1xuICAgICAgICAgICAgICAgICAgICBib3R0b206ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLlRvcExlZnQ6XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAnY2VudGVyJztcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnZmxleC1zdGFydCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LnRvcCAtXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9vZmZzZXRZKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC5sZWZ0KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLlRvcFJpZ2h0OlxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2NlbnRlcic7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLmp1c3RpZnlDb250ZW50ID0gJ2ZsZXgtZW5kJztcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb250YWluZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFJlY3QudG9wIC1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX29mZnNldFkpLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LnJpZ2h0KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAoMCwgcHhfMS5kZWZhdWx0KSgwKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5SaWdodDpcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICdjZW50ZXInO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdmbGV4LXN0YXJ0JztcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb250YWluZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFJlY3QudG9wICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFJlY3QuaGVpZ2h0IC8gMiksXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKHRhcmdldFJlY3QubGVmdCArIHRhcmdldFJlY3Qud2lkdGggKyB0aGlzLl9vZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLlJpZ2h0VG9wOlxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2ZsZXgtc3RhcnQnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdmbGV4LXN0YXJ0JztcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb250YWluZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICsgdGFyZ2V0UmVjdC50b3ApLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LnJpZ2h0ICsgdGhpcy5fb2Zmc2V0WCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fc2xvdCwge1xuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSgwKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5SaWdodEJvdHRvbTpcbiAgICAgICAgICAgICAgICB0aGlzLl9zbG90LnN0eWxlLmFsaWduSXRlbXMgPSAnZmxleC1lbmQnO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Nsb3Quc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnZmxleC1zdGFydCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArIHRhcmdldFJlY3QuYm90dG9tKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC5yaWdodCArIHRoaXMuX29mZnNldFgpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX3Nsb3QsIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uQm90dG9tOlxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2ZsZXgtc3RhcnQnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdjZW50ZXInO1xuICAgICAgICAgICAgICAgICgwLCBzZXRQb3NpdGlvbl8xLmRlZmF1bHQpKHRoaXMuX2NvbnRhaW5lciwge1xuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgK1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0UmVjdC5ib3R0b20gK1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fb2Zmc2V0WSksXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKHRhcmdldFJlY3QubGVmdCArIHRhcmdldFJlY3Qud2lkdGggLyAyKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uQm90dG9tTGVmdDpcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICdmbGV4LXN0YXJ0JztcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnZmxleC1zdGFydCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LmJvdHRvbSArXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9vZmZzZXRZKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC5sZWZ0KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQb3NpdGlvbl8xLlBvc2l0aW9uLkJvdHRvbVJpZ2h0OlxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2ZsZXgtc3RhcnQnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdmbGV4LWVuZCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LmJvdHRvbSArXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9vZmZzZXRZKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC5sZWZ0ICsgdGFyZ2V0UmVjdC53aWR0aCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fc2xvdCwge1xuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgICAgICByaWdodDogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uTGVmdDpcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICdjZW50ZXInO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdmbGV4LWVuZCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LnRvcCArXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LmhlaWdodCAvIDIpLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmxlZnQgLSB0aGlzLl9vZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAoMCwgcHhfMS5kZWZhdWx0KSgwKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUG9zaXRpb25fMS5Qb3NpdGlvbi5MZWZ0VG9wOlxuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2ZsZXgtc3RhcnQnO1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdmbGV4LWVuZCc7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fY29udGFpbmVyLCB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogKDAsIHB4XzEuZGVmYXVsdCkoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCArIHRhcmdldFJlY3QudG9wKSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogKDAsIHB4XzEuZGVmYXVsdCkodGFyZ2V0UmVjdC5sZWZ0IC0gdGhpcy5fb2Zmc2V0WCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgKDAsIHNldFBvc2l0aW9uXzEuZGVmYXVsdCkodGhpcy5fc2xvdCwge1xuICAgICAgICAgICAgICAgICAgICB0b3A6ICgwLCBweF8xLmRlZmF1bHQpKDApLFxuICAgICAgICAgICAgICAgICAgICByaWdodDogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFBvc2l0aW9uXzEuUG9zaXRpb24uTGVmdEJvdHRvbTpcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250YWluZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICdmbGV4LWVuZCc7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udGFpbmVyLnN0eWxlLmp1c3RpZnlDb250ZW50ID0gJ2ZsZXgtZW5kJztcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9jb250YWluZXIsIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAoMCwgcHhfMS5kZWZhdWx0KShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wICsgdGFyZ2V0UmVjdC5ib3R0b20pLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoMCwgcHhfMS5kZWZhdWx0KSh0YXJnZXRSZWN0LmxlZnQgLSB0aGlzLl9vZmZzZXRYKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAoMCwgc2V0UG9zaXRpb25fMS5kZWZhdWx0KSh0aGlzLl9zbG90LCB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogKDAsIHB4XzEuZGVmYXVsdCkoMCksXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAoMCwgcHhfMS5kZWZhdWx0KSgwKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFN0ZXBDb250YWluZXI7XG59KCkpO1xuZXhwb3J0cy5TdGVwQ29udGFpbmVyID0gU3RlcENvbnRhaW5lcjtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdGVwQ29udGFpbmVyRmFjdG9yeSA9IHZvaWQgMDtcbnZhciBTdGVwQ29udGFpbmVyXzEgPSByZXF1aXJlKFwiLi9TdGVwQ29udGFpbmVyXCIpO1xudmFyIFN0ZXBDb250YWluZXJGYWN0b3J5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0ZXBDb250YWluZXJGYWN0b3J5KCkge1xuICAgIH1cbiAgICBTdGVwQ29udGFpbmVyRmFjdG9yeS5jcmVhdGUgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zdGVwQ29udGFpbmVyKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGVwQ29udGFpbmVyID0gbmV3IFN0ZXBDb250YWluZXJfMS5TdGVwQ29udGFpbmVyKHNldHRpbmdzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc3RlcENvbnRhaW5lcjtcbiAgICB9O1xuICAgIHJldHVybiBTdGVwQ29udGFpbmVyRmFjdG9yeTtcbn0oKSk7XG5leHBvcnRzLlN0ZXBDb250YWluZXJGYWN0b3J5ID0gU3RlcENvbnRhaW5lckZhY3Rvcnk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGlua2VkTGlzdCA9IHZvaWQgMDtcbnZhciBMaW5rZWRMaXN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIExpbmtlZExpc3QoKSB7XG4gICAgfVxuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHZhciBub2RlID0gbmV3IE5vZGUoZGF0YSk7XG4gICAgICAgIGlmICghdGhpcy5faGVhZCAmJiAhdGhpcy5fdGFpbCkge1xuICAgICAgICAgICAgdGhpcy5faGVhZCA9IHRoaXMuX3RhaWwgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbm9kZS5wcmV2aW91cyA9IHRoaXMuX3RhaWw7XG4gICAgICAgICAgICB0aGlzLl90YWlsLm5leHQgPSBub2RlO1xuICAgICAgICAgICAgdGhpcy5fdGFpbCA9IG5vZGU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmdldEZpcnN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faGVhZDtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmdldExhc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90YWlsO1xuICAgIH07XG4gICAgTGlua2VkTGlzdC5wcm90b3R5cGUuZ2V0QnlJZCA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuX2hlYWQ7XG4gICAgICAgIHdoaWxlIChub2RlICYmIG5vZGUudmFsdWUuaWQgIT09IGlkKSB7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlIHx8IG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gTGlua2VkTGlzdDtcbn0oKSk7XG5leHBvcnRzLkxpbmtlZExpc3QgPSBMaW5rZWRMaXN0O1xudmFyIE5vZGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9kZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJ2YWx1ZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJwcmV2aW91c1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3ByZXZpb3VzO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICB0aGlzLl9wcmV2aW91cyA9IGl0ZW07XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwibmV4dFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX25leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMuX25leHQgPSBpdGVtO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE5vZGU7XG59KCkpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICBpZiAod2FpdCA9PT0gdm9pZCAwKSB7IHdhaXQgPSA1MDsgfVxuICAgIHZhciB0aW1lb3V0O1xuICAgIHJldHVybiBmdW5jdGlvbiBleGVjdXRlZEZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICB2YXIgbGF0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIGlmICghaW1tZWRpYXRlKSB7XG4gICAgICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGNhbGxOb3cgPSBpbW1lZGlhdGUgJiYgIXRpbWVvdXQ7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgICAgICBpZiAoY2FsbE5vdykge1xuICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBkZWJvdW5jZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHdhcm5fMSA9IHJlcXVpcmUoXCIuL3dhcm5cIik7XG5mdW5jdGlvbiBnZXRDYWxsYmFjayhmKSB7XG4gICAgaWYgKHR5cGVvZiBmICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IH07XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGYuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgKDAsIHdhcm5fMS5kZWZhdWx0KShlKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRDYWxsYmFjaztcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdCh2YWx1ZSAvIDEwMDAsIFwic1wiKTtcbn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCc7XG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGZ1bmN0aW9uICh2YWwpIHsgcmV0dXJuIFwiXCIuY29uY2F0KHZhbCwgXCJweFwiKTsgfSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBpc0RlZmluZWRfMSA9IHJlcXVpcmUoXCIuL2lzRGVmaW5lZFwiKTtcbmV4cG9ydHMuZGVmYXVsdCA9IChmdW5jdGlvbiAoZWxlbWVudCwgcG9zaXRpb24pIHtcbiAgICBbJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddLmZvckVhY2goZnVuY3Rpb24gKHNpZGUpIHtcbiAgICAgICAgaWYgKCgwLCBpc0RlZmluZWRfMS5kZWZhdWx0KShwb3NpdGlvbltzaWRlXSkpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbc2lkZV0gPSBwb3NpdGlvbltzaWRlXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUucmVtb3ZlUHJvcGVydHkoc2lkZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBfdGhyb3coZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gX3Rocm93O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBfd2FybihtZXNzYWdlKSB7XG4gICAgdGhyb3cgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gX3dhcm47XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07Il0sIm5hbWVzIjpbIk5ld2JpZV8xIiwiR2xvYmFsc18xIiwiVmFuaWxsYUNvbXBvbmVudHNGYWN0b3J5XzEiLCJDbGFzc05hbWVzIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJERUZBVUxUX1ZBTFVFUyIsIlBvc2l0aW9uXzEiLCJwb3NpdGlvbiIsIlBvc2l0aW9uIiwiQm90dG9tIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJzaGFkb3ciLCJlbmFibGVkIiwiY29sb3IiLCJvZmZzZXQiLCJib3JkZXJSYWRpdXMiLCJyb290Q29tcG9uZW50IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJkaXNhYmxlU2Nyb2xsIiwiYXJyb3ciLCJzaXplIiwiRXJyb3IiLCJBcnJvd0ZhY3RvcnkiLCJOdWxsQXJyb3dfMSIsIlRyaWFuZ2xlQXJyb3dfMSIsImNyZWF0ZSIsImNvbmZpZyIsInRoaXMiLCJfdHJpYW5nbGVBcnJvdyIsIlRyaWFuZ2xlQXJyb3ciLCJfbnVsbEFycm93IiwiTnVsbEFycm93IiwicHJvdG90eXBlIiwiZ2V0IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIm1vdW50IiwidW5tb3VudCIsIkNsYXNzTmFtZV8xIiwic2V0UG9zaXRpb25fMSIsInB4XzEiLCJfY3JlYXRlRWxlbWVudCIsIl9jb21wb25lbnQiLCJzZXR0aW5ncyIsIl91cGRhdGVTaXplIiwiX3VwZGF0ZUNvbG9yIiwiX3VwZGF0ZVBvc2l0aW9uIiwiX3Nob3ciLCJfaGlkZSIsImNsYXNzTGlzdCIsImFkZCIsIkFSUk9XX1ZJU0lCTEUiLCJyZW1vdmUiLCJjb21wb25lbnQiLCJjcmVhdGVFbGVtZW50IiwiQVJST1ciLCJzdHlsZSIsIndpZHRoIiwiZGVmYXVsdCIsImhlaWdodCIsImJhY2tncm91bmRDb2xvciIsIl9hIiwiaGludFJlY3QiLCJoYWxmT2ZBcnJvd1dpZHRoIiwiTWF0aCIsInNxcnQiLCJtYXgiLCJUb3AiLCJib3R0b20iLCJsZWZ0IiwiVG9wTGVmdCIsIlRvcFJpZ2h0IiwicmlnaHQiLCJSaWdodCIsInRvcCIsIlJpZ2h0VG9wIiwiUmlnaHRCb3R0b20iLCJCb3R0b21MZWZ0IiwiQm90dG9tUmlnaHQiLCJMZWZ0IiwiTGVmdFRvcCIsIkxlZnRCb3R0b20iLCJDb21wb25lbnRzRmFjdG9yeSIsIlNoYWRvd0ZhY3RvcnlfMSIsIkFycm93RmFjdG9yeV8xIiwiU3RlcENvbnRhaW5lckZhY3RvcnlfMSIsImNyZWF0ZVNoYWRvdyIsIlNoYWRvd0ZhY3RvcnkiLCJjcmVhdGVBcnJvdyIsImNyZWF0ZVN0ZXBDb250YWluZXIiLCJwYXlsb2FkIiwiU3RlcENvbnRhaW5lckZhY3RvcnkiLCJleHRlbmRTdGF0aWNzIiwiX19leHRlbmRzIiwiZCIsImIiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIl9fIiwiY29uc3RydWN0b3IiLCJWYW5pbGxhQ29tcG9uZW50c0ZhY3RvcnkiLCJIaW50RmFjdG9yeV8xIiwiX3N1cGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjcmVhdGVIaW50IiwiX2hpbnRGYWN0b3J5IiwiVmFuaWxsYUhpbnRGYWN0b3J5IiwiX19hc3NpZ24iLCJhc3NpZ24iLCJ0IiwicyIsImkiLCJuIiwibGVuZ3RoIiwiQ29uZmlnIiwiRGVmYXVsdFZhbHVlc18xIiwiRXJyb3JfMSIsImlzRGVmaW5lZF8xIiwiX2NvbmZpZyIsInZhbGlkYXRlIiwiaXNBcnJheSIsInN0ZXBzIiwiTk9fU1RFUFNfUFJPVklERUQiLCJoaW50Iiwic29tZSIsInN0ZXAiLCJOT19ISU5UX1BST1ZJREVEIiwiTk9fSElOVF9DT01QT05FTlRfUFJPVklERUQiLCJOT19DT05GSUdfUFJPVklERUQiLCJyZXNvbHZlU3RlcENvbmZpZyIsInN0ZXBJZCIsInN0ZXBDb25maWciLCJmaW5kIiwiaWQiLCJjb25jYXQiLCJfcmVzb2x2ZSIsInRhcmdldCIsIl9yZXNvbHZlT2JqZWN0IiwiQ2VudGVyIiwiY29udGVudCIsInBhcmFtIiwicmVzdWx0IiwiZGVmYXVsdFZhbHVlIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJHbG9iYWxzIiwiX2NvbXBvbmVudHNGYWN0b3J5Iiwic2V0IiwiZmFjdG9yeSIsIkhpbnQiLCJfY29udGVudCIsInNldENvbnRlbnQiLCJWdWVIaW50RmFjdG9yeSIsIlZhbmlsbGFIaW50XzEiLCJWdWVIaW50XzEiLCJWYW5pbGxhSGludCIsIlZ1ZSIsIl92dWUiLCJWdWVIaW50IiwiX3RoaXMiLCJISU5UIiwiX3NldHRpbmdzIiwiX3NldENvbnRlbnQiLCJfYWRkRGVmYXVsdEV2ZW50TGlzdGVuZXJzIiwiX3JlbW92ZURlZmF1bHRFdmVudExpc3RlbmVycyIsInF1ZXJ5U2VsZWN0b3IiLCJpbm5lckhUTUwiLCJnb05leHRCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZ29OZXh0IiwiZ29QcmV2QnRuIiwiZ29QcmV2aW91cyIsInN0b3BCdG4iLCJzdG9wIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9WdWUiLCJfdnVlQ29tcG9uZW50IiwiX2dldEhpbnRIVE1MRWxlbWVudCIsImV4dGVuZCIsInByb3BzRGF0YSIsIiRtb3VudCIsIiRvbiIsImVsZW0iLCIkZWwiLCJOZXdiaWUiLCJDb25maWdfMSIsIlN0ZXBfMSIsIkxpbmtlZExpc3RfMSIsImdldENhbGxiYWNrXzEiLCJ0aHJvd18xIiwid2Fybl8xIiwiX2N1cnJlbnRTdGVwIiwiZXJyb3IiLCJfc2V0U3RlcHMiLCJfc2V0TGlmZUN5Y2xlSG9va3MiLCJfYmVmb3JlU3RhcnQiLCJfc3RhcnRlZCIsIl9iZWZvcmVGaW5pc2giLCJfZmluaXNoZWQiLCJzdGFydCIsIl9nb1RvIiwiX3N0ZXBzIiwiZ2V0Rmlyc3QiLCJuZXh0U3RlcCIsIm5leHQiLCJwcmV2aW91c1N0ZXAiLCJwcmV2aW91cyIsImdvVG8iLCJnZXRCeUlkIiwibGlzdCIsIkxpbmtlZExpc3QiLCJpbmRleCIsIlN0ZXAiLCJiaW5kIiwiYmVmb3JlU3RhcnQiLCJzdGFydGVkIiwiYmVmb3JlRmluaXNoIiwiZmluaXNoZWQiLCJOdWxsU2hhZG93IiwiU2hhZG93IiwidGFyZ2V0RWxlbWVudCIsIl9kaXNhYmxlU2Nyb2xsIiwiX2VuYWJsZVNjcm9sbCIsIm92ZXJmbG93IiwicmVtb3ZlUHJvcGVydHkiLCJTdmdTaGFkb3dfMSIsIk51bGxTaGFkb3dfMSIsIl9zdmdTaGFkb3ciLCJTdmdTaGFkb3ciLCJTaGFkb3dfMSIsImdldFRyYW5zaXRpb25EdXJhdGlvbl8xIiwiZGVib3VuY2VfMSIsIl9zdmdSb290SWQiLCJfbWFza0lkIiwiX2JsYWNrSWQiLCJfc2hhZG93SWQiLCJfeCIsIl95IiwiX3dpZHRoIiwiX2hlaWdodCIsIl9yeCIsIl9yeSIsIl9jb2xvciIsIl90cmFuc2l0aW9uRHVyYXRpb24iLCJfY3JlYXRlRWxlbWVudHMiLCJfdGFyZ2V0RWxlbWVudCIsIl91cGRhdGUiLCJfcmVzaXplQ2FsbGJhY2siLCJ3aW5kb3ciLCJfY3JlYXRlU3ZnRWxlbWVudHMiLCJfY3JlYXRlT3ZlcmxheUVsZW1lbnRzIiwiX3VwZGF0ZVN2ZyIsIl91cGRhdGVPdmVybGF5IiwiX3Nob3dTdmciLCJfc2hvd092ZXJsYXkiLCJfaGlkZVN2ZyIsIl9oaWRlT3ZlcmxheSIsImJsb2NrIiwiU0hBRE9XIiwic3ZnIiwiU0hBRE9XX1NWRyIsInNldEF0dHJpYnV0ZSIsImRlZnMiLCJtYXNrIiwid2hpdGUiLCJibGFjayIsImFwcGVuZCIsImJvZHkiLCJfc3ZnUm9vdCIsIl9ibG9jayIsInRvcEJsb2NrIiwicmlnaHRCbG9jayIsImJvdHRvbUJsb2NrIiwibGVmdEJsb2NrIiwiU0hBRE9XX09WRVJMQVkiLCJTSEFET1dfT1ZFUkxBWV9UT1AiLCJTSEFET1dfT1ZFUkxBWV9SSUdIVCIsIlNIQURPV19PVkVSTEFZX0JPVFRPTSIsIlNIQURPV19PVkVSTEFZX0xFRlQiLCJfb3ZlcmxheUJsb2NrVCIsIl9vdmVybGF5QmxvY2tSIiwiX292ZXJsYXlCbG9ja0IiLCJfb3ZlcmxheUJsb2NrTCIsIngiLCJpbm5lcldpZHRoIiwieSIsImlubmVySGVpZ2h0IiwicngiLCJyeSIsInRhcmdldFJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJfcmVzZXRBbmltYXRpb25zIiwiX2NyZWF0ZUFuaW1hdGlvbiIsInRhcmdldElkIiwiYXR0cmlidXRlIiwiZnJvbSIsInRvIiwiZHVyYXRpb24iLCJvdXRlckhUTUwiLCJTSEFET1dfVklTSUJMRSIsImFuaW1hdGlvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzdGVwUGFyYW1zIiwiX2lkIiwiX3RhcmdldCIsIl9wb3NpdGlvbiIsIl9vZmZzZXRYIiwiX29mZnNldFkiLCJfc2hhZG93Q29uZmlnIiwiX2hpbnRDb25maWciLCJfY29udGVudENvbmZpZyIsIl9hcnJvd0NvbmZpZyIsIl9zdGVwUGFyYW1zIiwiX2NyZWF0ZVN0ZXBDb250YWluZXIiLCJfY3JlYXRlU2hhZG93IiwiX2NyZWF0ZUhpbnQiLCJfY3JlYXRlQXJyb3ciLCJfYmVmb3JlTW91bnQiLCJfbW91bnRlZCIsIl9iZWZvcmVVbm1vdW50IiwiX3VubW91bnRlZCIsIl9zZXRUYXJnZXRFbGVtZW50IiwiX3Njcm9sbFRvVGFyZ2V0IiwiX21vdW50U3RlcENvbnRhaW5lciIsIl9tb3VudFNoYWRvdyIsIl9tb3VudEhpbnQiLCJfbW91bnRBcnJvdyIsIl91bm1vdW50QXJyb3ciLCJfdW5tb3VudEhpbnQiLCJfdW5tb3VudFNoYWRvdyIsIl91bm1vdW50U3RlcENvbnRhaW5lciIsIl9zdGVwQ29udGFpbmVyIiwiY29tcG9uZW50c0ZhY3RvcnkiLCJfc2hhZG93IiwiX2hpbnQiLCJfYXJyb3ciLCJiZWZvcmVNb3VudCIsIm1vdW50ZWQiLCJiZWZvcmVVbm1vdW50IiwidW5tb3VudGVkIiwib2Zmc2V0VG9wIiwibWluIiwic2Nyb2xsSGVpZ2h0Iiwic2Nyb2xsVG9wIiwic2Nyb2xsVG8iLCJTdGVwQ29udGFpbmVyIiwiX2NyZWF0ZUNvbXBvbmVudHMiLCJfY29udGFpbmVyIiwic2hvdyIsIkhJTlRfV1JBUF9WSVNJQkxFIiwiaGlkZSIsIl9zbG90Iiwid3JhcCIsIkhJTlRfV1JBUCIsInRyYW5zaXRpb24iLCJpbm5lciIsIkhJTlRfV1JBUF9JTk5FUiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsIlN0ZXBDb250YWluZXJfMSIsImRhdGEiLCJub2RlIiwiTm9kZSIsIl9oZWFkIiwiX3RhaWwiLCJnZXRMYXN0IiwiX3ZhbHVlIiwiX3ByZXZpb3VzIiwiaXRlbSIsIl9uZXh0IiwiZnVuYyIsIndhaXQiLCJpbW1lZGlhdGUiLCJ0aW1lb3V0IiwiY29udGV4dCIsImFyZ3MiLCJsYXRlciIsImNhbGxOb3ciLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZiIsIl9pIiwiZSIsInZhbCIsImVsZW1lbnQiLCJzaWRlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJ3YXJuIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyJdLCJzb3VyY2VSb290IjoiIn0=